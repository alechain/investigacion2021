ggtheme=theme_classic(),main = "Plot de clusters resultantes de la macrolocalización", labelsize = 6
)
set.seed(1118)
km_clusters<- kmeans(datos_norm,centers = 2,iter.max = 1000, nstart = 25)
nomenclador<- km_clusters$cluster
resumen_cluster<-aggregate(datos3,by = list(cluster=km_clusters$cluster),FUN = median)
resumen_g<-resumen_cluster %>% pivot_longer(-cluster)
resumen2<-data.frame(t(resumen_cluster))
resumen2<- resumen2 %>% rename("cluster 1"=X1,"cluster 2"=X2) %>% rownames_to_column()
resumen2<- resumen2 %>% rename("Indicadores"=rowname)
resumen2<- resumen2 %>% filter(Indicadores!="cluster")
resumen2$`cluster 1`<- formattable::comma((resumen2$`cluster 1`),2)
resumen2$`cluster 2`<- formattable::comma((resumen2$`cluster 2`),2)
kableExtra::kable(resumen2,format = "markdown",caption = "Resumen de indicadores por cluster")
resumen2$`cluster 1`<- round((resumen2$`cluster 1`),2)
resumen2$`cluster 2`<- round((resumen2$`cluster 2`),2)
#xtable(resumen2, type="latex",auto = TRUE)
datos<- cbind(datos,cluster=nomenclador)
clustersprov<-datos %>% select(Provincia,cluster)
datos<- read_csv("macroloc_para_r.csv",col_names = T, row.names(1))
datos3<- datos %>% select(-Provincia)
row.names(datos3)<- datos$Provincia
datos4<- datos3
#datos<- datos %>% mutate(`Densidad poblacional: Hab/km² (2010)`=log(`Densidad poblacional: Hab/km² (2010)`))
datos3<-datos3 %>% select(-c(`Densidad poblacional: Hab/km² (2010)`,`Habitantes (2010)`))
datos_norm<- scale(datos3)
factoextra::fviz_nbclust(datos_norm,kmeans, method="wss")+ geom_vline(xintercept = 2, colour="RED", linetype="dotted")
set.seed(1118)
km_clusters<- kmeans(datos_norm,centers = 2,iter.max = 1000, nstart = 25)
nomenclador<- km_clusters$cluster
fviz_cluster(km_clusters, data = datos4,
palette = c("RED", "BLUE"),
ellipse.type = "euclid", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme=theme_classic(),main = "Plot de clusters resultantes de la macrolocalización", labelsize = 6
)
datos<- read_csv("macroloc_para_r.csv",col_names = T, row.names(1))
datos3<- datos %>% select(-Provincia)
row.names(datos3)<- datos$Provincia
datos4<- datos3
#datos<- datos %>% mutate(`Densidad poblacional: Hab/km² (2010)`=log(`Densidad poblacional: Hab/km² (2010)`))
datos3<-datos3 %>% select(-c(`Densidad poblacional: Hab/km² (2010)`))
datos_norm<- scale(datos3)
factoextra::fviz_nbclust(datos_norm,kmeans, method="wss")+ geom_vline(xintercept = 2, colour="RED", linetype="dotted")
set.seed(1118)
km_clusters<- kmeans(datos_norm,centers = 2,iter.max = 1000, nstart = 25)
nomenclador<- km_clusters$cluster
resumen_cluster<-aggregate(datos3,by = list(cluster=km_clusters$cluster),FUN = median)
resumen_g<-resumen_cluster %>% pivot_longer(-cluster)
resumen2<-data.frame(t(resumen_cluster))
resumen2<- resumen2 %>% rename("cluster 1"=X1,"cluster 2"=X2) %>% rownames_to_column()
resumen2<- resumen2 %>% rename("Indicadores"=rowname)
resumen2<- resumen2 %>% filter(Indicadores!="cluster")
resumen2$`cluster 1`<- formattable::comma((resumen2$`cluster 1`),2)
resumen2$`cluster 2`<- formattable::comma((resumen2$`cluster 2`),2)
kableExtra::kable(resumen2,format = "markdown",caption = "Resumen de indicadores por cluster")
resumen2$`cluster 1`<- round((resumen2$`cluster 1`),2)
resumen2$`cluster 2`<- round((resumen2$`cluster 2`),2)
#xtable(resumen2, type="latex",auto = TRUE)
datos<- cbind(datos,cluster=nomenclador)
clustersprov<-datos %>% select(Provincia,cluster)
datos %>% group_by(cluster) %>% summarise(habitantes=sum(`Habitantes (2010)`))
datos %>% group_by(cluster) %>% summarise(Provincia)
fviz_cluster(km_clusters, data = datos4,
palette = c("RED", "BLUE"),
ellipse.type = "euclid", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme=theme_classic(),main = "Plot de clusters resultantes de la macrolocalización", labelsize = 6
)
km_clusters<- kmeans(datos_norm,centers = 2,iter.max = 1000)
nomenclador<- km_clusters$cluster
resumen_cluster<-aggregate(datos3,by = list(cluster=km_clusters$cluster),FUN = median)
resumen_g<-resumen_cluster %>% pivot_longer(-cluster)
resumen2<-data.frame(t(resumen_cluster))
resumen2<- resumen2 %>% rename("cluster 1"=X1,"cluster 2"=X2) %>% rownames_to_column()
resumen2<- resumen2 %>% rename("Indicadores"=rowname)
resumen2<- resumen2 %>% filter(Indicadores!="cluster")
resumen2$`cluster 1`<- formattable::comma((resumen2$`cluster 1`),2)
resumen2$`cluster 2`<- formattable::comma((resumen2$`cluster 2`),2)
kableExtra::kable(resumen2,format = "markdown",caption = "Resumen de indicadores por cluster")
resumen2$`cluster 1`<- round((resumen2$`cluster 1`),2)
resumen2$`cluster 2`<- round((resumen2$`cluster 2`),2)
#xtable(resumen2, type="latex",auto = TRUE)
datos<- cbind(datos,cluster=nomenclador)
clustersprov<-datos %>% select(Provincia,cluster)
fviz_cluster(km_clusters, data = datos4,
palette = c("RED", "BLUE"),
ellipse.type = "euclid", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme=theme_classic(),main = "Plot de clusters resultantes de la macrolocalización", labelsize = 6
)
fviz_nbclust(datos3, kmeans, method = "wss")
fviz_nbclust(datos3, kmeans, method = "sillohuete")
fviz_nbclust(datos3, kmeans, method = "silhouette")
fviz_nbclust(datos3, kmeans, method = "gap-stat")
fviz_nbclust(datos3, kmeans, method = "gap_stat")
km_clusters<- kmeans(datos_norm,centers = 4,iter.max = 1000,nstart = 1000)
fviz_cluster(km_clusters, data = datos4,
palette = c("RED", "BLUE"),
ellipse.type = "euclid", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme=theme_classic(),main = "Plot de clusters resultantes de la macrolocalización", labelsize = 6
)
datos<- read_csv("macroloc_para_r.csv",col_names = T, row.names(1))
datos3<- datos %>% select(-Provincia)
row.names(datos3)<- datos$Provincia
datos4<- datos3
#datos<- datos %>% mutate(`Densidad poblacional: Hab/km² (2010)`=log(`Densidad poblacional: Hab/km² (2010)`))
datos3<-datos3 %>% select(-c(`Densidad poblacional: Hab/km² (2010)`))
datos_norm<- scale(datos3)
factoextra::fviz_nbclust(datos_norm,kmeans, method="wss")+ geom_vline(xintercept = 2, colour="RED", linetype="dotted")
set.seed(1118)
km_clusters<- kmeans(datos_norm,centers = 4,iter.max = 1000,nstart = 1000)
nomenclador<- km_clusters$cluster
resumen_cluster<-aggregate(datos3,by = list(cluster=km_clusters$cluster),FUN = median)
resumen_g<-resumen_cluster %>% pivot_longer(-cluster)
resumen2<-data.frame(t(resumen_cluster))
resumen2<- resumen2 %>% rename("cluster 1"=X1,"cluster 2"=X2) %>% rownames_to_column()
resumen2<- resumen2 %>% rename("Indicadores"=rowname)
resumen2<- resumen2 %>% filter(Indicadores!="cluster")
resumen2$`cluster 1`<- formattable::comma((resumen2$`cluster 1`),2)
resumen2$`cluster 2`<- formattable::comma((resumen2$`cluster 2`),2)
kableExtra::kable(resumen2,format = "markdown",caption = "Resumen de indicadores por cluster")
resumen2$`cluster 1`<- round((resumen2$`cluster 1`),2)
resumen2$`cluster 2`<- round((resumen2$`cluster 2`),2)
#xtable(resumen2, type="latex",auto = TRUE)
datos<- cbind(datos,cluster=nomenclador)
clustersprov<-datos %>% select(Provincia,cluster)
datos %>% group_by(cluster) %>% summarise(habitantes=sum(`Habitantes (2010)`))
datos %>% group_by(cluster) %>% summarise(Provincia)
fviz_cluster(km_clusters, data = datos4,
palette = c("RED", "BLUE"),
ellipse.type = "euclid", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme=theme_classic(),main = "Plot de clusters resultantes de la macrolocalización", labelsize = 6
)
fviz_cluster(km_clusters, data = datos4,
palette = c("RED", "BLUE","YELLOW","GREEN"),
ellipse.type = "euclid", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme=theme_classic(),main = "Plot de clusters resultantes de la macrolocalización", labelsize = 6
)
factoextra::fviz_nbclust(datos_norm,kmeans, method="wss")+ geom_vline(xintercept = 3, colour="RED", linetype="dotted")
set.seed(1118)
km_clusters<- kmeans(datos_norm,centers = 3,iter.max = 1000,nstart = 1000)
nomenclador<- km_clusters$cluster
resumen_cluster<-aggregate(datos3,by = list(cluster=km_clusters$cluster),FUN = median)
resumen_g<-resumen_cluster %>% pivot_longer(-cluster)
resumen2<-data.frame(t(resumen_cluster))
resumen2<- resumen2 %>% rename("Cluster 1"=X1,"Cluster 2"=X2, "Cluster 3"=X3) %>% rownames_to_column()
resumen2<- resumen2 %>% rename("Indicadores"=rowname)
resumen2<- resumen2 %>% filter(Indicadores!="cluster")
resumen2$`cluster 1`<- formattable::comma((resumen2$`cluster 1`),2)
resumen_cluster<-aggregate(datos3,by = list(cluster=km_clusters$cluster),FUN = median)
resumen_g<-resumen_cluster %>% pivot_longer(-cluster)
resumen2<-data.frame(t(resumen_cluster))
resumen2<- resumen2 %>% rename("Cluster 1"=X1,"Cluster 2"=X2, "Cluster 3"=X3) %>% rownames_to_column()
resumen2<- resumen2 %>% rename("Indicadores"=rowname)
resumen2<- resumen2 %>% filter(Indicadores!="cluster")
resumen2$`Cluster 1`<- formattable::comma((resumen2$`Cluster 1`),2)
resumen2$`Cluster 2`<- formattable::comma((resumen2$`Cluster 2`),2)
resumen2$`Cluster 3`<- formattable::comma((resumen2$`Cluster 3`),2)
kableExtra::kable(resumen2,format = "markdown",caption = "Resumen de indicadores por cluster")
resumen2$`Cluster 1`<- round((resumen2$`Cluster 1`),2)
resumen2$`Cluster 2`<- round((resumen2$`Cluster 2`),2)
resumen2$`Cluster 3`<- round((resumen2$`Cluster 3`),2)
#xtable(resumen2, type="latex",auto = TRUE)
factoextra::fviz_nbclust(datos_norm,kmeans, method="wss")+ geom_vline(xintercept = 3, colour="RED", linetype="dotted") + theme_classic()
factoextra::fviz_nbclust(datos_norm,kmeans, method="wss")+ geom_vline(xintercept = 3, colour="RED", linetype="dotted") + theme_minimal()
factoextra::fviz_nbclust(datos_norm,kmeans, method="wss")+ geom_vline(xintercept = 3, colour="RED", linetype="dotted") + theme_classic() + labs(title="Hola")
factoextra::fviz_nbclust(datos_norm,kmeans, method="wss")+ geom_vline(xintercept = 3, colour="RED", linetype="dotted") + theme_classic() + labs(title="Numero ótimo de clusters")
factoextra::fviz_nbclust(datos_norm,kmeans, method="wss")+ geom_vline(xintercept = 3, colour="RED", linetype="dotted") + theme_classic() + labs(title="Numero óptimo de clusters")
factoextra::fviz_nbclust(datos_norm,kmeans, method="wss")+ geom_vline(xintercept = 3, colour="RED", linetype="dotted") + theme_classic() + labs(title="Numero óptimo de clusters") + theme(text=element_text(family = "LM Roman 10"))
factoextra::fviz_nbclust(datos_norm,kmeans, method="wss")+ geom_vline(xintercept = 3, colour="RED", linetype="dotted") + theme_classic() + labs(title="Numero óptimo de clusters") + theme(text=element_text(family = "LM Roman 10"), title = element_text(face = "bold"))
factoextra::fviz_nbclust(datos_norm,kmeans, method="wss")+ geom_vline(xintercept = 3, colour="RED", linetype="dotted") + theme_classic() + labs(title="Numero óptimo de clusters") + xlab("Número de clusters") + ylab("WSS")+ theme(text=element_text(family = "LM Roman 10"), title = element_text(face = "bold"))
fviz_cluster(km_clusters, data = datos4,
palette = c("RED", "BLUE","GREEN"),
ellipse.type = "euclid", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme=theme_classic(),main = "Plot de clusters resultantes de la macrolocalización", labelsize = 6
) + theme_classic() + labs(title="Numero óptimo de clusters")
fviz_cluster(km_clusters, data = datos4,
palette = c("RED", "BLUE","GREEN"),
ellipse.type = "euclid", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
labelsize = 6) + theme_classic() + labs(title="Plot de clusters resultantes de la macrolocalización") + theme(text=element_text(family = "LM Roman 10"), title = element_text(face = "bold"))
fviz_cluster(km_clusters, data = datos4,
palette = c("RED", "BLUE","GREEN"),
ellipse.type = "euclid", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
labelsize = 6, ) + theme_classic(base_family ="LM Roman 10" ) + labs(title="Plot de clusters resultantes de la macrolocalización") + theme(text=element_text(family = "LM Roman 10"), title = element_text(face = "bold"))
factoextra::fviz_nbclust(datos_norm,kmeans, method="wss")+ geom_vline(xintercept = 3, colour="RED", linetype="dotted") + theme_classic() + labs(title="Numero óptimo de clusters") + xlab("Número de clusters") + ylab("WSS")+ theme(text=element_text(family = "LM Roman 10"), title = element_text(face = "bold"))
warnings()
library(extra font)+
install.packages("extrafont")
library(extrafont)
font_import()
loadfonts()
setwd("/home/alejandrochain/Documentos/GitHub/investigacion2021/macrolocalizacion")
knitr::opts_chunk$set(echo = TRUE, dev="cairo_pdf")
library(readr)
library(tidyverse)
library(factoextra)
library(cluster)
library(fpc)
#estos sirven para formatear pa lñatex
library(stargazer)
library(xtable)
library(extrafont)
font_import()
resumen2[,2]
setwd("/home/alejandrochain/Documentos/GitHub/investigacion2021/macrolocalizacion")
knitr::opts_chunk$set(echo = FALSE, dev="cairo_pdf")
library(readr)
library(tidyverse)
library(factoextra)
library(cluster)
library(fpc)
#estos sirven para formatear pa latex
library(stargazer)
library(xtable)
library(extrafont)
library(eph)
library(readxl)
datos<- read_csv("macroloc_para_r.csv",col_names = T, row.names(1))
datos3<- datos %>% select(-Provincia)
row.names(datos3)<- datos$Provincia
datos4<- datos3
#datos<- datos %>% mutate(`Densidad poblacional: Hab/km² (2010)`=log(`Densidad poblacional: Hab/km² (2010)`))
datos3<-datos3 %>% select(-c(`Densidad poblacional: Hab/km² (2010)`))
datos_norm<- scale(datos3)
factoextra::fviz_nbclust(datos_norm,kmeans, method="wss")+ geom_vline(xintercept = 3, colour="RED", linetype="dotted") + theme_classic() + labs(title="Numero óptimo de clusters") + xlab("Número de clusters") + ylab("WSS")+ theme(text=element_text(family = "LM Roman 10"), title = element_text(face = "bold"))
set.seed(1118)
km_clusters<- kmeans(datos_norm,centers = 3,iter.max = 1000,nstart = 2000)
nomenclador<- km_clusters$cluster
resumen_cluster<-aggregate(datos3,by = list(cluster=km_clusters$cluster),FUN = median)
resumen_g<-resumen_cluster %>% pivot_longer(-cluster)
resumen2<-data.frame(t(resumen_cluster))
resumen2<- resumen2 %>% rename("Cluster 1"=X1,"Cluster 2"=X2, "Cluster 3"=X3) %>% rownames_to_column()
resumen2<- resumen2 %>% rename("Indicadores"=rowname)
resumen2<- resumen2 %>% filter(Indicadores!="cluster")
resumen2$`Cluster 1`<- formattable::comma((resumen2$`Cluster 1`),2)
resumen2$`Cluster 2`<- formattable::comma((resumen2$`Cluster 2`),2)
resumen2$`Cluster 3`<- formattable::comma((resumen2$`Cluster 3`),2)
kableExtra::kable(resumen2,format = "markdown",caption = "Resumen de indicadores por cluster")
resumen2$`Cluster 1`<- round((resumen2$`Cluster 1`),2)
resumen2$`Cluster 2`<- round((resumen2$`Cluster 2`),2)
resumen2$`Cluster 3`<- round((resumen2$`Cluster 3`),2)
#xtable(resumen2, type="latex",auto = TRUE)
datos<- cbind(datos,cluster=nomenclador)
clustersprov<-datos %>% select(Provincia,cluster)
datos %>% group_by(cluster) %>% summarise(habitantes=sum(`Habitantes (2010)`))
datos %>% group_by(cluster) %>% summarise(Provincia)
resumen2[,2]
resumen2[1,2]
resumen2[1,3]
resumen2[1,4]
View(resumen2)
resumen[1,2:3]
resumen2[1,2:3]
resumen2[1,2:4]
resumen2[1,2:4][]
resumen2[1,2:4]<- round(resumen2[1,2:4])
resumen2[1,2:4]<- round(resumen2[1,2:4],0)
resumen2[1,2:4]<- formattable::comma(resumen2[1,2:4],0)
formattable::comma(resumen2[1,2:4],0)
resumen_cluster<-aggregate(datos3,by = list(cluster=km_clusters$cluster),FUN = median)
resumen_g<-resumen_cluster %>% pivot_longer(-cluster)
resumen2<-data.frame(t(resumen_cluster))
resumen2<- resumen2 %>% rename("Cluster 1"=X1,"Cluster 2"=X2, "Cluster 3"=X3) %>% rownames_to_column()
resumen2<- resumen2 %>% rename("Indicadores"=rowname)
resumen2<- resumen2 %>% filter(Indicadores!="cluster")
resumen2$`Cluster 1`<- formattable::comma((resumen2$`Cluster 1`),2)
resumen2$`Cluster 2`<- formattable::comma((resumen2$`Cluster 2`),2)
resumen2$`Cluster 3`<- formattable::comma((resumen2$`Cluster 3`),2)
resumen2[1,2:4]<- formattable::comma(resumen2[1,2:4],0)
kableExtra::kable(resumen2,format = "markdown",caption = "Resumen de indicadores por cluster")
resumen2$`Cluster 1`<- round((resumen2$`Cluster 1`),2)
resumen2$`Cluster 2`<- round((resumen2$`Cluster 2`),2)
resumen2$`Cluster 3`<- round((resumen2$`Cluster 3`),2)
#xtable(resumen2, type="latex",auto = TRUE)
resumen_cluster<-aggregate(datos3,by = list(cluster=km_clusters$cluster),FUN = median)
resumen_g<-resumen_cluster %>% pivot_longer(-cluster)
resumen2<-data.frame(t(resumen_cluster))
resumen2<- resumen2 %>% rename("Cluster 1"=X1,"Cluster 2"=X2, "Cluster 3"=X3) %>% rownames_to_column()
resumen2<- resumen2 %>% rename("Indicadores"=rowname)
resumen2<- resumen2 %>% filter(Indicadores!="cluster")
resumen2$`Cluster 1`<- formattable::comma((resumen2$`Cluster 1`),0)
resumen2$`Cluster 2`<- formattable::comma((resumen2$`Cluster 2`),2)
resumen2$`Cluster 3`<- formattable::comma((resumen2$`Cluster 3`),2)
resumen2[1,2:4]<- formattable::comma(resumen2[1,2:4],0)
kableExtra::kable(resumen2,format = "markdown",caption = "Resumen de indicadores por cluster")
resumen2$`Cluster 1`<- round((resumen2$`Cluster 1`),2)
resumen2$`Cluster 2`<- round((resumen2$`Cluster 2`),2)
resumen2$`Cluster 3`<- round((resumen2$`Cluster 3`),2)
#xtable(resumen2, type="latex",auto = TRUE)
resumen2[,2:4]
resumen2[1,2:4]
as.numeric(resumen2[1,2:4])
resumen2[1,2:4]<-as.numeric(resumen2[1,2:4])
resumen2[1,2:4][resumen2[1,2:4]]
resumen2$`Cluster 1`
resumen2$`Cluster 1`[1]
resumen_cluster<-aggregate(datos3,by = list(cluster=km_clusters$cluster),FUN = median)
resumen_g<-resumen_cluster %>% pivot_longer(-cluster)
resumen2<-data.frame(t(resumen_cluster))
resumen2<- resumen2 %>% rename("Cluster 1"=X1,"Cluster 2"=X2, "Cluster 3"=X3) %>% rownames_to_column()
resumen2<- resumen2 %>% rename("Indicadores"=rowname)
resumen2<- resumen2 %>% filter(Indicadores!="cluster")
resumen2$`Cluster 1`<- formattable::comma((resumen2$`Cluster 1`),2)
resumen2$`Cluster 2`<- formattable::comma((resumen2$`Cluster 2`),2)
resumen2$`Cluster 3`<- formattable::comma((resumen2$`Cluster 3`),2)
resumen2$`Cluster 1`[1]<- formattable::comma((resumen2$`Cluster 1`[1]),0)
resumen2$`Cluster 2`[1]<- formattable::comma((resumen2$`Cluster 2`[1]),0)
resumen2$`Cluster 3`[1]<- formattable::comma((resumen2$`Cluster 3`[1]),0)
kableExtra::kable(resumen2,format = "markdown",caption = "Resumen de indicadores por cluster")
resumen2$`Cluster 1`<- round((resumen2$`Cluster 1`),2)
resumen2$`Cluster 2`<- round((resumen2$`Cluster 2`),2)
resumen2$`Cluster 3`<- round((resumen2$`Cluster 3`),2)
#xtable(resumen2, type="latex",auto = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(eph)
library(tidyverse)
library(readxl)
## Individual
ephi<- get_microdata(year=2017:2019, trimester = 1:4, type = "individual")
ephi<- ephi %>%
dplyr::select(microdata) %>%
tidyr::unnest(cols = c(microdata))
### 2016
ephi2<- get_microdata(year=2016, trimester = 2:4, type = "individual")
ephi2<- ephi2 %>%
dplyr::select(microdata) %>%
tidyr::unnest(cols = c(microdata))
ephi<- bind_rows(ephi,ephi2)
ephi<- ephi %>% arrange(-ANO4, -TRIMESTRE)
## Hogar
ephh<- get_microdata(year=2017:2019, trimester = 1:4, type = "hogar")
ephh<- ephh %>%
dplyr::select(microdata) %>%
tidyr::unnest(cols = c(microdata))
### 2016
ephh2<- get_microdata(year=2016, trimester = 2:4, type = "hogar")
ephh2<- ephh2 %>%
dplyr::select(microdata) %>%
tidyr::unnest(cols = c(microdata))
ephh<- bind_rows(ephh,ephh2)
ephh<- ephh %>% arrange(-ANO4, -TRIMESTRE)
### mergeado
ephtotal<- left_join(ephi,ephh)
### aglomerado
aglomerado<- read_excel("aglomerado.xlsx",sheet = 4)
### Sector
sectorcaes<- read.csv("SECTORESCAES.csv", sep=",", header = T, encoding = "UTF-8", colClasses = "character")
### provincia
provincia<- read.csv("provincias.csv", sep=",", header = T)
provincia1<- provincia %>% select(PROVINCIA,CH15_COD)
provincia2<- provincia %>% select(PROVINCIA,CH16_COD)
ephtotal<- ephtotal %>% filter(ESTADO!=0) %>%  mutate(Sexo=as.character(CH04),
Sexo=case_when(Sexo=="1" ~ "Hombres",
Sexo=="2" ~ "Mujeres"),
PP04D_COD = case_when(nchar(PP04D_COD) == 5 ~ PP04D_COD,
nchar(PP04D_COD) == 4 ~ paste0("0", PP04D_COD),
nchar(PP04D_COD) == 3 ~ paste0("00", PP04D_COD),
nchar(PP04D_COD) == 2 ~ paste0("000", PP04D_COD),
nchar(PP04D_COD) == 1 ~ paste0("0000", PP04D_COD)),
CALIFICACION = substr(PP04D_COD, 5, 5),
JERARQUIA = substr(PP04D_COD, 3, 3),
JERARQUIA = case_when(JERARQUIA=="0" ~ "Dirección",
JERARQUIA=="2" ~ "Jefes",
JERARQUIA=="1" ~ "Cuentapropia",
JERARQUIA=="3" ~ "Trabajadores\nAsalariados"),
JERARQUIA = factor(JERARQUIA, c("Dirección", "Jefes", "Trabajadores\nAsalariados", "Cuentapropia")),
PEA= case_when(ESTADO==3 ~ 0,
ESTADO==4 ~ 0,
ESTADO==1 ~ 1,
ESTADO==2 ~ 1),
PP04D_COD = as.character(PP04D_COD),
CALIFICACION = case_when(CALIFICACION=="1" ~ "Profesionales",
CALIFICACION=="2" ~ "Técnicos",
CALIFICACION=="3" ~ "Operativos",
CALIFICACION=="4" ~ "No Calificados"),
CALIFICACION = factor(CALIFICACION, c("No Calificados", "Operativos", "Técnicos", "Profesionales")),
PP04B_COD=as.character(PP04B_COD),
PP04B_COD=case_when(nchar(PP04B_COD)==4~PP04B_COD,
nchar(PP04B_COD)==1~ paste0("0",PP04B_COD,"00"),
nchar(PP04B_COD)==2~ paste0(PP04B_COD,"00"),
nchar(PP04B_COD)==3~ paste0("0",PP04B_COD)),
SECTOR= substr(PP04B_COD,1,2),
HORASSEM=PP3E_TOT+PP3F_TOT,
niveled=case_when(NIVEL_ED==1 | NIVEL_ED==7 ~ "Sin\ninstrucción",
NIVEL_ED %in% c(2,3) ~ "Primario\nCompleto",
NIVEL_ED %in% c(4,5)~ "Secundario\nCompleto",
NIVEL_ED == 6 ~ "Superior/Universitario\ncompleto"),
niveled=factor(niveled, levels = c("Sin\ninstrucción","Primario\nCompleto","Secundario\nCompleto","Superior/Universitario\ncompleto")))
ephtotal<- left_join(ephtotal,aglomerado)
ephtotal<- left_join(ephtotal, sectorcaes)
saveRDS(ephtotal, file = "ephtotal.Rds")
ephtotal<- read_rds("ephtotal.Rds")
View(ephtotal)
resumen_cluster<-aggregate(datos3,by = list(cluster=km_clusters$cluster),FUN = median)
resumen_g<-resumen_cluster %>% pivot_longer(-cluster)
resumen2<-data.frame(t(resumen_cluster))
resumen2<- resumen2 %>% rename("Cluster 1"=X1,"Cluster 2"=X2, "Cluster 3"=X3) %>% rownames_to_column()
resumen2<- resumen2 %>% rename("Indicadores"=rowname)
resumen2<- resumen2 %>% filter(Indicadores!="cluster")
resumen2$`Cluster 1`<- formattable::comma((resumen2$`Cluster 1`),2)
resumen2$`Cluster 2`<- formattable::comma((resumen2$`Cluster 2`),2)
resumen2$`Cluster 3`<- formattable::comma((resumen2$`Cluster 3`),2)
resumen2$`Cluster 1`[1]<- formattable::comma((resumen2$`Cluster 1`[1]),0)
resumen2$`Cluster 2`[1]<- formattable::comma((resumen2$`Cluster 2`[1]),0)
resumen2$`Cluster 3`[1]<- formattable::comma((resumen2$`Cluster 3`[1]),0)
kableExtra::kable(resumen2,format = "markdown",caption = "Resumen de indicadores por cluster")
#xtable(resumen2, type="latex",auto = TRUE)
provincia<- read.csv("provincias.csv", sep=",", header = T)
provincia1<- provincia %>% select(PROVINCIA,CH15_COD)
provincia2<- provincia %>% select(PROVINCIA,CH16_COD)
View(provincia)
View(provincia1)
View(datos)
install.packages("diffdf")
all_equal(datos,provincia)
#
nombredato<- datos %>% select(Provincia)
nombredato
View(nombredato)
all_equal(nombredato,provincia)
bind_rows(nombredato, provincia)
compare<-bind_cols(nombredato, provincia)
View(compare)
datos<- datos %>% mutate(Provincia=case_when(Provincia=="Tierra del Fuego, Antártida e Islas del Atlántico Sur (4)"~ "Tierra del Fuego, Antártida e Islas del Atlántico Sur",
TRUE~Provincia))
datos<- datos %>% mutate(Provincia=case_when(Provincia=="Tierra del Fuego, Antártida e Islas del Atlántico Sur (4)"~ "Tierra del Fuego, Antártida e Islas del Atlántico Sur",
TRUE~Provincia)) %>% arrange(Provincia)
provincia<- read.csv("provincias.csv", sep=",", header = T)
provincia1<- provincia %>% select(PROVINCIA,CH15_COD)
provincia2<- provincia %>% select(PROVINCIA,CH16_COD)
provincia<- provincia %>% arrange(PROVINCIA)
#
nombredato<- datos %>% select(Provincia)
nombredato
compare<-bind_cols(nombredato, provincia)
name_prov_para_datos<-bind_cols(nombredato, provincia)
name_prov_para_datos<-bind_cols(nombredato, provincia) %>% select(-PROVINCIA)
View(name_prov_para_datos)
datos<- left_join(datos,name_prov_para_datos)
View(datos)
View(provincia)
View(provincia1)
View(provincia2)
View(datos)
#
cluster_nombres_eph<- datos %>% select(c("Provincia","cluster","CH15_COD","CH16_COD"))
View(cluster_nombres_eph)
cluster_nombres_eph<- cluster_nombres_eph %>% rename("PROVINCIA"=Provincia)
##############################################################################################
ephinmi<- ephtotal %>% filter(CH15==3)
cluster_nombres_eph_ch15<-cluster_nombres_eph %>% select(PROVINCIA,CH15_COD)
ephinmi<- left_join(ephinmi, cluster_nombres_eph_ch15)
prueba<- ephinmi %>% filter(is.na(PROVINCIA))
prueba<- prueba %>% select(CH15, CH15_COD, PROVINCIA)
View(prueba)
ephinmi %>% filter(!is.na(SECTOR_ACT)) %>% group_by(SECTOR_ACT) %>% summarise(porcentaje=formattable::percent (sum(PONDERA)/sum(ephinmi$PONDERA[!is.na(SECTOR_ACT)]))) %>% arrange(-porcentaje)
View(ephinmi)
ephinmi<- ephinmi %>% filter(!is.na(CH15_COD))
ephinmi %>% group_by(Cluster=Cluster) %>% summarise(porcentaje=formattable::percent((sum(PONDERA)(sum(ephinmi$PONDERA))),2))
ephinmi %>% group_by(Cluster=cluster) %>% summarise(porcentaje=formattable::percent((sum(PONDERA)(sum(ephinmi$PONDERA))),2))
#
cluster_nombres_eph<- datos %>% select(c("Provincia","cluster","CH15_COD","CH16_COD"))
cluster_nombres_eph<- cluster_nombres_eph %>% rename("PROVINCIA"=Provincia)
cluster_nombres_eph_ch15<-cluster_nombres_eph %>% select(PROVINCIA,CH15_COD, cluster)
##############################################################################################
ephinmi<- ephtotal %>% filter(CH15==3)
ephinmi<- left_join(ephinmi, cluster_nombres_eph_ch15)
ephinmi<- ephinmi %>% filter(!is.na(CH15_COD))
ephinmi %>% group_by(Cluster=cluster) %>% summarise(porcentaje=formattable::percent((sum(PONDERA)(sum(ephinmi$PONDERA))),2))
ephinmi %>% group_by(Cluster=Cluster) %>% summarise(porcentaje=formattable::percent((sum(PONDERA)(sum(ephinmi$PONDERA))),2))
ephinmi %>% group_by(cluster) %>% summarise(porcentaje=formattable::percent((sum(PONDERA)(sum(ephinmi$PONDERA))),2))
ephinmi %>% group_by(cluster) %>% summarise(sum(PONDERA))
ephinmi %>% filter(is.na(cluster))
ephinmi %>% filter(is.na(cluster)) %>% select(CH15_COD,cluster,PROVINCIA)
ephinmi<- ephinmi %>% filter(!is.na(PROVINCIA))
ephinmi %>% group_by(cluster) %>% summarise(sum(PONDERA))
ephinmi %>% group_by("Cluster"=cluster) %>% summarise("Porcentaje"=formattable::percent((sum(PONDERA)/sum(ephinmi$PONDERA))))
cuadro_2<-ephinmi %>% group_by("Cluster"=cluster) %>% summarise("Porcentaje"=formattable::percent((sum(PONDERA)/sum(ephinmi$PONDERA))))
cuadro_2<-ephinmi %>% group_by("Cluster"=cluster) %>% summarise("Porcentaje"=formattable::percent((sum(PONDERA)/sum(ephinmi$PONDERA))))
kableExtra::kable(cuadro_2,format = "markdown",caption = "Porcentaje de migrantes por cluster")
kableExtra::kable(resumen2,format = "markdown",caption = "Resumen de indicadores por cluster",align = "left")
kableExtra::kable(resumen2,format = "markdown",caption = "Resumen de indicadores por cluster",align = "l")
kableExtra::kable(resumen2,format = "markdown",caption = "Resumen de indicadores por cluster",align = "c")
|hola|
|hola|
|-----|
| Tables   |      Are      |  Cool |
|----------|:-------------:|------:|
| col 1 is |  left-aligned | $1600 |
| col 2 is |    centered   |   $12 |
| col 3 is | right-aligned |    $1 |
| Tables   |      Are      |  Cool |
prov_por_aglo<- read_csv("provincias_por_aglomerado.csv")
View(prov_por_aglo)
ephinmi<- left_join(ephinmi,prov_por_aglo)
rm(list=ls())
