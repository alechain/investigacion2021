NIVEL_ED %in% c(4,5)~ "Secundario\nCompleto",
NIVEL_ED == 6 ~ "Superior/Universitario\ncompleto"),
niveled=factor(niveled, levels = c("Sin\ninstrucción","Primario\nCompleto","Secundario\nCompleto","Superior/Universitario\ncompleto")))
# unimos los aglomerados y sectores para cada individuo
ephtotal<- left_join(ephtotal,aglomerado)
ephtotal<- left_join(ephtotal, sectorcaes)
set.seed(1118)
km_clusters<- kmeans(datos_norm,centers = 3,iter.max = 1000,nstart = 2000)
## Normalización de la base de datos
#Ahora normalizamos la base de datos para lograr coherencia en la aplicación de K-means, debido a quen trabajamos con distintas escalas de datos.
datos3<-datos3 %>% select(-c(`Densidad poblacional: Hab/km² (2010)`))
datos_norm<- scale(datos3)
library(tikzDevice)
#tikz(file = "regiones_optimas.tex", width = 6, height = 4)
factoextra::fviz_nbclust(datos_norm,kmeans, method="wss")+ geom_vline(xintercept = 3, colour="RED", linetype="dotted") + theme_classic() + labs(title="") + xlab("Número de clusters") + ylab("WSS")+ theme(text=element_text(), title = element_text(face = "bold"),axis.text = element_text(color = "BLACK", size = 5) , axis.title = element_text(size = 5),panel.background = element_blank())
#dev.off()
set.seed(1118)
km_clusters<- kmeans(datos_norm,centers = 3,iter.max = 1000,nstart = 2000)
nomenclador<- km_clusters$cluster
#Podemos ver la media de los parámetros para cada uno de los clusters
resumen_cluster<-aggregate(datos3,by = list(cluster=km_clusters$cluster),FUN = median)
resumen_g<-resumen_cluster %>% pivot_longer(-cluster)
resumen2<-data.frame(t(resumen_cluster))
resumen2<- resumen2 %>% rename("Region 1"=X1,"Region 2"=X2, "Region 3"=X3) %>% rownames_to_column()
resumen2<- resumen2 %>% rename("Indicadores"=rowname)
resumen2<- resumen2 %>% filter(Indicadores!="cluster" & Indicadores!="Habitantes (2010)" )
resumen2$`Region 1`<- formattable::comma((resumen2$`Region 1`),2)
resumen2$`Region 2`<- formattable::comma((resumen2$`Region 2`),2)
resumen2$`Region 3`<- formattable::comma((resumen2$`Region 3`),2)
resumen2b<- resumen2[14:16,]
resumen2b$`Region 1`<- resumen2b$`Region 1`*100
resumen2b$`Region 2`<- resumen2b$`Region 2`*100
resumen2b$`Region 3`<- resumen2b$`Region 3`*100
resumen2<- resumen2[1:13,]
resumen2<- bind_rows(resumen2, resumen2b)
#
kableExtra::kable(resumen2,format = "html",caption = "Resumen de indicadores por cluster")
#xtable(resumen2, type="latex",auto = TRUE)
#Podemos ver la media de los parámetros para cada uno de los clusters
resumen_cluster<-aggregate(datos3,by = list(cluster=km_clusters$cluster),FUN = median)
resumen_g<-resumen_cluster %>% pivot_longer(-cluster)
resumen2<-data.frame(t(resumen_cluster))
resumen2<- resumen2 %>% rename("Region 1"=X1,"Region 2"=X2, "Region 3"=X3) %>% rownames_to_column()
resumen2<- resumen2 %>% rename("Indicadores"=rowname)
resumen2<- resumen2 %>% filter(Indicadores!="cluster" & Indicadores!="Habitantes (2010)" )
resumen2$`Region 1`<- formattable::comma((resumen2$`Region 1`),2)
resumen2$`Region 2`<- formattable::comma((resumen2$`Region 2`),2)
resumen2$`Region 3`<- formattable::comma((resumen2$`Region 3`),2)
resumen2b<- resumen2[14:16,]
resumen2b$`Region 1`<- resumen2b$`Region 1`*100
resumen2b$`Region 2`<- resumen2b$`Region 2`*100
resumen2b$`Region 3`<- resumen2b$`Region 3`*100
resumen2<- resumen2[1:13,]
resumen2<- bind_rows(resumen2, resumen2b)
#
kableExtra::kable(resumen2,format = "html",caption = "Resumen de indicadores por cluster")
#xtable(resumen2, type="latex",auto = TRUE)
#agregamos a la base de datos original la denominación de cada cluster
datos<- cbind(datos,cluster=nomenclador)
clustersprov<-datos %>% select(Provincia,cluster)
datos %>% group_by(cluster) %>% summarise(habitantes=sum(`Habitantes (2010)`))
datos %>% group_by(cluster) %>% summarise(Provincia)
datos<- datos %>% mutate(Provincia=case_when(Provincia=="Tierra del Fuego, Antártida e Islas del Atlántico Sur (4)"~ "Tierra del Fuego, Antártida e Islas del Atlántico Sur",
TRUE~Provincia)) %>% arrange(Provincia)
names(km_clusters[1])
#tikz(file = "regiones_resultantes.tex", sanitize = TRUE,width = 6,height = 4)
fviz_cluster(km_clusters, data = datos4,
palette = c("RED", "BLUE","GREEN"),
ellipse.type = "euclid",
star.plot = TRUE,
repel = TRUE,
labelsize = 6) + labs(title="") + theme(text=element_text(),  title = element_text(face = "bold"),axis.text = element_text(color = "BLACK", size = 5) , axis.title = element_text(size = 5),panel.background = element_blank(), axis.line.x.bottom = element_line(color = "BLACK"), axis.line.y.left = element_line(color="BLACK"))
#dev.off()
provincia<- provincia %>% arrange(PROVINCIA)
provincia1<- provincia %>% select(PROVINCIA,CH15_COD)
provincia2<- provincia %>% select(PROVINCIA,CH16_COD)
#
nombredato<- datos %>% select(Provincia)
nombredato
name_prov_para_datos<-bind_cols(nombredato, provincia) %>% select(-PROVINCIA)
datos<- left_join(datos,name_prov_para_datos)
#
cluster_nombres_eph<- datos %>% select(c("Provincia","cluster","CH15_COD","CH16_COD"))
cluster_nombres_eph<- cluster_nombres_eph %>% rename(provincia_origen=Provincia, cluster_origen=cluster)
cluster_nombres_eph_ch15<-cluster_nombres_eph %>% select(provincia_origen,CH15_COD, cluster_origen)
##############################################################################################
ephinmi<- ephtotal %>% filter(CH15==3)
ephinmi<- left_join(ephinmi, cluster_nombres_eph_ch15)
ephinmi<- ephinmi %>% filter(!is.na(provincia_origen))
temp<- tempfile()
download.file("https://github.com/alechain/investigacion2021/raw/main/macrolocalizacion/provincias_por_aglomerado.csv", temp)
prov_por_aglo<- read_csv(temp)
unlink(temp)
cluster_destino<- cluster_nombres_eph %>% select(provincia_origen,cluster_origen) %>% rename(provincia_destino=provincia_origen, cluster_destino=cluster_origen)
cluster_destino<- left_join(prov_por_aglo,cluster_destino)
ephinmi<- left_join(ephinmi,cluster_destino)
cuadro_4<- ephinmi %>% group_by("Provincia"=provincia_destino) %>% summarise("Inmigrantes"=sum(PONDERA))
cuadro_5<- ephinmi %>% group_by("Provincia"=provincia_origen) %>% summarise("Emigrantes"=sum(PONDERA))
cuadro_6<- full_join(cuadro_4,cuadro_5)
######
prov_aglo<- prov_por_aglo %>% rename(provincia=provincia_destino)
ephtotal<- left_join(ephtotal, prov_aglo)
prov_cluster<- clustersprov %>% mutate(Provincia=case_when(Provincia=="Tierra del Fuego, Antártida e Islas del Atlántico Sur (4)"~ "Tierra del Fuego, Antártida e Islas del Atlántico Sur",                              TRUE ~ Provincia))
#######
cuadro_7<- ephtotal %>% group_by("Provincia"=provincia) %>% summarise("Poblacion"=sum(PONDERA))
cuadro_8<- left_join(cuadro_6,cuadro_7)
cuadro_8<- left_join(cuadro_8,prov_cluster)
cuadro_8<- cuadro_8 %>% mutate(tasa_inmigracion=Inmigrantes/Poblacion, tasa_emigracion=Emigrantes/Poblacion, tasa_neta=tasa_inmigracion-tasa_emigracion)
cuadro_8$cluster<- factor(cuadro_8$cluster, levels = c("1","2","3"))
### Mapa de migraciony emigracion por provincia
temp<- tempfile()
download.file("https://github.com/alechain/investigacion2021/raw/main/macrolocalizacion/mapa/gadm36_ARG_shp.zip", temp)
g<-unzip(temp,files = c("gadm36_ARG_1.shp","gadm36_ARG_1.cpg","gadm36_ARG_1.dbf","gadm36_ARG_1.prj","gadm36_ARG_1.shx"))
datos_mapa_prov<- st_read(g[1])
datos_mapa_prov<- datos_mapa_prov %>% rename(Provincia=NAME_1)
datos_mapa_prov<- datos_mapa_prov %>% mutate(Provincia=case_when(Provincia=="Ciudad de Buenos Aires"  ~ "Ciudad Autónoma de Buenos Aires",
Provincia=="Tierra del Fuego"  ~"Tierra del Fuego, Antártida e Islas del Atlántico Sur",
TRUE~Provincia))
cuadro_9<- cuadro_8 %>% mutate(tasa_inmigracion=formattable::percent(tasa_inmigracion),tasa_emigracion=formattable::percent(tasa_emigracion))
datos_mapa_prov<- inner_join(datos_mapa_prov, cuadro_9)
#extrafont::font_import(paths = "/home/alejandrochain/Documentos/GitHub/investigacion2021/macrolocalizacion/fuentes")
#extrafont::loadfonts(device = "pdf",quiet = T)
#pdf(file = "mapa_regiones.pdf", width = 4,height = 4)
mapa_cluster<- ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=cluster),color="BLACK", size=0.2 ) + labs(fill="Región:") + scale_fill_manual(values=color)+ theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() , axis.text = element_blank(), axis.ticks = element_blank())
mapa_cluster
#dev.off()
### Mapa de migraciony emigracion por provincia
temp<- tempfile()
download.file("https://github.com/alechain/investigacion2021/raw/main/macrolocalizacion/mapa/gadm36_ARG_shp.zip", temp)
g<-unzip(temp,files = c("gadm36_ARG_1.shp","gadm36_ARG_1.cpg","gadm36_ARG_1.dbf","gadm36_ARG_1.prj","gadm36_ARG_1.shx"))
datos_mapa_prov<- st_read(g[1])
datos_mapa_prov<- datos_mapa_prov %>% rename(Provincia=NAME_1)
datos_mapa_prov<- datos_mapa_prov %>% mutate(Provincia=case_when(Provincia=="Ciudad de Buenos Aires"  ~ "Ciudad Autónoma de Buenos Aires",
Provincia=="Tierra del Fuego"  ~"Tierra del Fuego, Antártida e Islas del Atlántico Sur",
TRUE~Provincia))
cuadro_9<- cuadro_8 %>% mutate(tasa_inmigracion=formattable::percent(tasa_inmigracion),tasa_emigracion=formattable::percent(tasa_emigracion))
datos_mapa_prov<- inner_join(datos_mapa_prov, cuadro_9)
#extrafont::font_import(paths = "/home/alejandrochain/Documentos/GitHub/investigacion2021/macrolocalizacion/fuentes")
#extrafont::loadfonts(device = "pdf",quiet = T)
#pdf(file = "mapa_regiones.pdf", width = 4,height = 4)
mapa_cluster<- ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=cluster),color="BLACK", size=0.2 ) + labs(fill="Región:") + scale_fill_manual(values=color)+ theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() , axis.text = element_blank(), axis.ticks = element_blank())
mapa_cluster
#dev.off()
kableExtra::kable(resumen2, caption = "Resumen de indicadores por regiones")
cuadro_2<-ephinmi %>% group_by("Región"=cluster_origen) %>% summarise("Porcentaje"=formattable::percent((sum(PONDERA)/sum(ephinmi$PONDERA))))
kableExtra::kable(cuadro_2,format = "html",caption = "Regiones de origen de los migrantes")
cuadro_3<-ephinmi %>% group_by("Región"=cluster_destino) %>% summarise("Porcentaje"=formattable::percent((sum(PONDERA)/sum(ephinmi$PONDERA))))
kableExtra::kable(cuadro_3,format = "html",caption = "Regiones de destino de los migrantes")
cuadro_8 %>% ggplot(mapping=aes(x=tasa_inmigracion,y = tasa_emigracion, label=Provincia, color=cluster)) + geom_point(show.legend = T) + geom_abline(intercept=-0,slope = 1)+ scale_color_manual(values = color)+ scale_y_continuous(labels = scales::percent_format(),limits = c(0,0.75))+scale_x_continuous(labels = scales::percent_format(),limits = c(0,0.75)) + xlab("Tasa de inmigración") + ylab("Tasa de emigración")+ labs(title = "", color="Región:")+ ggrepel::geom_text_repel(size=3,show.legend = F)+theme(text=element_text(),axis.line = element_line(color="BLACK") ,axis.text = element_text(size=7, color = "BLACK") , panel.background = element_blank(),  axis.title = element_text(size=7), title = element_text(face = "bold"), legend.key = element_blank())
#Creación de regresores
unlink(temp)
temp<- tempfile()
download.file("https://github.com/alechain/investigacion2021/blob/main/macrolocalizacion/deflactor.csv",temp)
deflactor<- read_csv("deflactor.csv")
unlink(temp)
temp<- tempfile()
download.file("https://github.com/alechain/investigacion2021/blob/main/macrolocalizacion/canasta.csv",temp)
canastas<- read.csv("canasta.csv", sep=";", dec=".", header = TRUE)
unlink(temp)
ephtotal<- left_join(ephtotal, deflactor)
ephtotal<- ephtotal %>% mutate(HIJO=case_when(CH03==3~1,
TRUE ~ 0))
ephtotal<- ephtotal %>% group_by(ANO4, TRIMESTRE, CODUSU,NRO_HOGAR) %>% mutate(HIJO_HOGAR=sum(HIJO)) %>% ungroup()
ephtotal<- left_join(ephtotal,eph::adulto_equivalente)
ephtotal<- left_join(ephtotal,canastas)
ephtotal<- ephtotal %>% group_by(ANO4, TRIMESTRE, CODUSU,NRO_HOGAR) %>% mutate(EAF=sum(adequi)) %>% ungroup()
ephtotal<- ephtotal %>% mutate(CBAEQ=CBA*EAF,
CBTEQ=CBT*EAF)
ephtotal<- ephtotal %>% mutate(condicion=case_when(ITF<CBAEQ ~ "Indigente",
ITF>=CBAEQ & ITF<CBTEQ ~ "Pobre",
ITF>=CBTEQ ~ "No Pobre"))
ephtotal<- ephtotal %>% mutate(hombre=case_when(Sexo=="Hombres"~1,
Sexo=="Mujeres"~0),
edad=case_when(CH06=="-1" ~ as.integer(1),
TRUE ~ as.integer(CH06)),
edad2=(edad)^2,
ledad=log(edad),
medio=case_when(niveled=="Secundario\nCompleto"~ 1,
TRUE ~ 0),
alto=case_when(niveled=="Superior/Universitario\ncompleto"~ 1,
TRUE ~ 0),
IPCFR=IPCF/DEFLACTOR,
IPCFRL=log(IPCFR),
OCUPADO_BAJO=case_when(ESTADO==1 & CALIFICACION %in% c("No Calificados", "Operativos") ~ 1,
TRUE ~ 0),
OCUPADO_ALTO=case_when(ESTADO==1 & CALIFICACION %in% c("Profesionales","Técnicos") ~ 1,
TRUE ~ 0),
PROPIETARIO=case_when(II7==1 | II7==2 ~ 1,
TRUE ~ 0),
HIJO_DUMMY=case_when(HIJO_HOGAR==0 ~ 0,
TRUE ~ 1),
CASADO= case_when(CH07==1 | CH07==2 ~ 1 ,
TRUE ~ 0),
SOLTERO_C_HIJO=case_when(CASADO==0 & HIJO_DUMMY==1~1,
TRUE~0),
CASADO_S_HIJO=case_when(CASADO==1 & HIJO_DUMMY==0~ 1,
TRUE ~ 0),
CASADO_C_HIJO=case_when(CASADO==1 & HIJO_DUMMY==1~1,
TRUE~0),
POBRE=case_when(condicion %in% c("Pobre","Indigente")~1,
TRUE ~ 0),
SUBSIDIO=case_when(V5==1 ~ 1,
TRUE ~ 0)
)
View(cluster_destino)
sexo_edad<- eph_carac %>% mutate(condicion_mig=case_when(migrante==1 ~ "Migrantes",
nativo==1 ~ "Nativos"))
eph_carac<- ephtotal %>% mutate(migrante=case_when(CH15==3 ~ 1,
TRUE ~ 0),
nativo=case_when(CH15 %in% c(1,2) ~ 1,
TRUE ~ 0))
#asignamos el cluster de destino para los migrantes, que es el cluster en donde le hicieron la encuensta, que en el caso de #los nativos es su cluster de origen
eph_carac<- left_join(eph_carac,cluster_destino)
sexo_edad<- eph_carac %>% mutate(condicion_mig=case_when(migrante==1 ~ "Migrantes",
nativo==1 ~ "Nativos"))
pre<-sexo_edad %>% group_by(cluster_destino,  condicion_mig) %>% summarise(total=sum(PONDERA))
post<-sexo_edad %>% group_by(cluster_destino,  condicion_mig, Sexo) %>% summarise(Cantidad=sum(PONDERA))
sexo_edad<- left_join(post,pre)
sexo_edad$Porcentaje=formattable::percent((sexo_edad$Cantidad/sexo_edad$total),2)
sexo_edad$cluster_destino=paste0("\\textbf{Región",sexo_edad$cluster_destino,"}")
#tikz("/home/alejandrochain/Documentos/GitHub/investigacion2021/latex/graficos/sexo_mig.tex",width = 6, height = 4,sanitize = TRUE)
sexo_edad %>% filter(!is.na(condicion_mig)) %>% ggplot(mapping=aes(x = condicion_mig, y =Porcentaje, fill=Sexo, label=Porcentaje)) + geom_col(position = position_fill(),width = 0.6) + facet_grid(rows = vars(cluster_destino)) + xlab("") + ylab("")+scale_y_continuous(labels = scales::percent_format())+ labs(fill="") + scale_fill_manual(values = color) + geom_text(position = position_fill(vjust = 0.4), size=3) + theme(axis.text = element_text(color = "BLACK"), strip.background = element_blank(), panel.background = element_blank())+ coord_flip()
#dev.off()
sexo_edad<- eph_carac %>% mutate(condicion_mig=case_when(migrante==1 ~ "Migrantes",
nativo==1 ~ "Nativos"))
pre<-sexo_edad %>% group_by(cluster_destino,  condicion_mig) %>% summarise(total=sum(PONDERA))
post<-sexo_edad %>% group_by(cluster_destino,  condicion_mig, Sexo) %>% summarise(Cantidad=sum(PONDERA))
sexo_edad<- left_join(post,pre)
sexo_edad$Porcentaje=formattable::percent((sexo_edad$Cantidad/sexo_edad$total),2)
sexo_edad$cluster_destino=paste0("Región",sexo_edad$cluster_destino)
#tikz("/home/alejandrochain/Documentos/GitHub/investigacion2021/latex/graficos/sexo_mig.tex",width = 6, height = 4,sanitize = TRUE)
sexo_edad %>% filter(!is.na(condicion_mig)) %>% ggplot(mapping=aes(x = condicion_mig, y =Porcentaje, fill=Sexo, label=Porcentaje)) + geom_col(position = position_fill(),width = 0.6) + facet_grid(rows = vars(cluster_destino)) + xlab("") + ylab("")+scale_y_continuous(labels = scales::percent_format())+ labs(fill="") + scale_fill_manual(values = color) + geom_text(position = position_fill(vjust = 0.4), size=3) + theme(axis.text = element_text(color = "BLACK"), strip.background = element_blank(), panel.background = element_blank())+ coord_flip()
#dev.off()
sexo_edad<- eph_carac %>% mutate(condicion_mig=case_when(migrante==1 ~ "Migrantes",
nativo==1 ~ "Nativos"))
pre<-sexo_edad %>% group_by(cluster_destino,  condicion_mig) %>% summarise(total=sum(PONDERA))
post<-sexo_edad %>% group_by(cluster_destino,  condicion_mig, Sexo) %>% summarise(Cantidad=sum(PONDERA))
sexo_edad<- left_join(post,pre)
sexo_edad$Porcentaje=formattable::percent((sexo_edad$Cantidad/sexo_edad$total),2)
sexo_edad$cluster_destino=paste0("Región ",sexo_edad$cluster_destino)
#tikz("/home/alejandrochain/Documentos/GitHub/investigacion2021/latex/graficos/sexo_mig.tex",width = 6, height = 4,sanitize = TRUE)
sexo_edad %>% filter(!is.na(condicion_mig)) %>% ggplot(mapping=aes(x = condicion_mig, y =Porcentaje, fill=Sexo, label=Porcentaje)) + geom_col(position = position_fill(),width = 0.6) + facet_grid(rows = vars(cluster_destino)) + xlab("") + ylab("")+scale_y_continuous(labels = scales::percent_format())+ labs(fill="") + scale_fill_manual(values = color) + geom_text(position = position_fill(vjust = 0.4), size=3) + theme(axis.text = element_text(color = "BLACK"), strip.background = element_blank(), panel.background = element_blank())+ coord_flip()
#dev.off()
sexo_edad<- eph_carac %>% mutate(condicion_mig=case_when(migrante==1 ~ "Migrantes",
nativo==1 ~ "Nativos"))
sexo_edad$cluster_destino=paste0("Región ",sexo_edad$cluster_destino)
#tikz("/home/alejandrochain/Documentos/GitHub/investigacion2021/latex/graficos/edad_mig.tex",width = 6, height = 4,sanitize = TRUE)
sexo_edad %>% filter(!is.na(condicion_mig)) %>% ggplot(mapping = aes(x=edad, group=condicion_mig, fill=condicion_mig)) + geom_density(alpha=0.5) + scale_fill_manual(values=color)+ xlab("Edad")+ ylab("Densidad")+ labs(fill="") +scale_y_continuous(labels = scales::percent_format())+facet_grid(.~cluster_destino)+ theme(axis.text = element_text(color = "BLACK"), strip.background = element_blank(), panel.background = element_blank(), axis.line.x.bottom = element_line(color="BLACK"),axis.line.y.left = element_line(color="BLACK"))
#dev.off()
sexo_edad
sexo_edad<-sexo_edad %>% filter(!is.na(condicion_mig)) %>% group_by("Región"=cluster_destino,"Condición"=condicion_mig, "Género"=Sexo) %>% summarise("Mediana de Edad"=median(edad))
sexo_edad$Región<- str_replace(sexo_edad$Región,pattern = "textbf",replacement = "")
sexo_edad$Región<- str_replace_all(sexo_edad$Región,pattern = "[[:punct:]]",replacement = "")
#xtable(sexo_edad,caption = "Edad y género de los migrantes",label = "cuadro:edad_mig" ,align = c("c","c","c","c","c"))
#stargazer(sexo_edad,title = "Edad y género de los migrantes",summary = FALSE,label = "cuadro:edad_mig")
pobreza<- eph_carac %>% mutate(condicion_mig=case_when(migrante==1 ~ "Migrantes",
nativo==1 ~ "Nativos"))
pre<-pobreza %>% group_by(cluster_destino,  condicion_mig) %>% summarise(total=sum(PONDERA))
post<-pobreza %>% group_by(cluster_destino,  condicion_mig, POBRE) %>% summarise(Cantidad=sum(PONDERA))
pobreza<- left_join(post,pre)
pobreza$Porcentaje=formattable::percent((pobreza$Cantidad/pobreza$total),2)
pobreza$cluster_destino=paste0("\\textbf{Región",pobreza$cluster_destino,"}")
pobreza <- pobreza %>% mutate(POBRE=case_when(POBRE==1~ "Pobre",
POBRE==0~ "No pobre"))
#tikz("/home/alejandrochain/Documentos/GitHub/investigacion2021/latex/graficos/pobre_mig.tex",width = 6, height = 4,sanitize = TRUE)
pobreza %>% filter(!is.na(condicion_mig)) %>% ggplot(mapping=aes(x = condicion_mig, y =Porcentaje, fill=POBRE, label=Porcentaje)) + geom_col(position = position_fill(),width = 0.8) + facet_grid(cols = vars(cluster_destino)) + xlab("") + ylab("")+scale_y_continuous(labels = scales::percent_format())+ labs(fill="") + scale_fill_manual(values = color) + geom_text(position = position_fill(vjust = 0.4), size=3) + theme(axis.text = element_text(color = "BLACK"), strip.background = element_blank(), panel.background = element_blank())
#dev.off()
pobreza<- eph_carac %>% mutate(condicion_mig=case_when(migrante==1 ~ "Migrantes",
nativo==1 ~ "Nativos"))
pre<-pobreza %>% group_by(cluster_destino,  condicion_mig) %>% summarise(total=sum(PONDERA))
post<-pobreza %>% group_by(cluster_destino,  condicion_mig, POBRE) %>% summarise(Cantidad=sum(PONDERA))
pobreza<- left_join(post,pre)
pobreza$Porcentaje=formattable::percent((pobreza$Cantidad/pobreza$total),2)
pobreza$cluster_destino=paste0("Región ",pobreza$cluster_destino,"}")
pobreza <- pobreza %>% mutate(POBRE=case_when(POBRE==1~ "Pobre",
POBRE==0~ "No pobre"))
#tikz("/home/alejandrochain/Documentos/GitHub/investigacion2021/latex/graficos/pobre_mig.tex",width = 6, height = 4,sanitize = TRUE)
pobreza %>% filter(!is.na(condicion_mig)) %>% ggplot(mapping=aes(x = condicion_mig, y =Porcentaje, fill=POBRE, label=Porcentaje)) + geom_col(position = position_fill(),width = 0.8) + facet_grid(cols = vars(cluster_destino)) + xlab("") + ylab("")+scale_y_continuous(labels = scales::percent_format())+ labs(fill="") + scale_fill_manual(values = color) + geom_text(position = position_fill(vjust = 0.4), size=3) + theme(axis.text = element_text(color = "BLACK"), strip.background = element_blank(), panel.background = element_blank())
#dev.off()
pobreza<- eph_carac %>% mutate(condicion_mig=case_when(migrante==1 ~ "Migrantes",
nativo==1 ~ "Nativos"))
pre<-pobreza %>% group_by(cluster_destino,  condicion_mig) %>% summarise(total=sum(PONDERA))
post<-pobreza %>% group_by(cluster_destino,  condicion_mig, POBRE) %>% summarise(Cantidad=sum(PONDERA))
pobreza<- left_join(post,pre)
pobreza$Porcentaje=formattable::percent((pobreza$Cantidad/pobreza$total),2)
pobreza$cluster_destino=paste0("Región ",pobreza$cluster_destino)
pobreza <- pobreza %>% mutate(POBRE=case_when(POBRE==1~ "Pobre",
POBRE==0~ "No pobre"))
#tikz("/home/alejandrochain/Documentos/GitHub/investigacion2021/latex/graficos/pobre_mig.tex",width = 6, height = 4,sanitize = TRUE)
pobreza %>% filter(!is.na(condicion_mig)) %>% ggplot(mapping=aes(x = condicion_mig, y =Porcentaje, fill=POBRE, label=Porcentaje)) + geom_col(position = position_fill(),width = 0.8) + facet_grid(cols = vars(cluster_destino)) + xlab("") + ylab("")+scale_y_continuous(labels = scales::percent_format())+ labs(fill="") + scale_fill_manual(values = color) + geom_text(position = position_fill(vjust = 0.4), size=3) + theme(axis.text = element_text(color = "BLACK"), strip.background = element_blank(), panel.background = element_blank())
#dev.off()
patrimonio<- eph_carac %>% mutate(condicion_mig=case_when(migrante==1 ~ "Migrantes",
nativo==1 ~ "Nativos"))
pre<-patrimonio %>% group_by(cluster_destino,  condicion_mig) %>% summarise(total=sum(PONDERA))
post<-patrimonio %>% group_by(cluster_destino,  condicion_mig, PROPIETARIO) %>% summarise(Cantidad=sum(PONDERA))
patrimonio<- left_join(post,pre)
patrimonio$Porcentaje=formattable::percent((patrimonio$Cantidad/patrimonio$total),2)
patrimonio$cluster_destino=paste0("Región",patrimonio$cluster_destino)
patrimonio <- patrimonio %>% mutate(PROPIETARIO=case_when(PROPIETARIO==1~ "Propietario",
PROPIETARIO==0~ "No propietario"))
patrimonio<- patrimonio %>% group_by(cluster_destino, condicion_mig) %>% mutate(ymax=as.numeric(cumsum(Porcentaje)))
patrimonio<- patrimonio %>% group_by(cluster_destino, condicion_mig) %>% mutate(ymin=c(0, head(ymax, n=-1)))
patrimonio<- patrimonio %>% group_by(cluster_destino, condicion_mig) %>% mutate(labelpos=(ymax+ymin)/2)
#tikz("/home/alejandrochain/Documentos/GitHub/investigacion2021/latex/graficos/vivienda_mig.tex",width = 6, height = 4,sanitize = TRUE)
patrimonio %>% filter(!is.na(condicion_mig)) %>% ggplot(mapping=aes(ymax=ymax, ymin=ymin, xmax=4, xmin=0, fill=PROPIETARIO)) + scale_fill_manual(values = color)+
geom_rect() +
geom_text( x=2, aes(y=labelpos, label=Porcentaje), size=2.5)  +
coord_polar(theta="y") +
xlim(c(0, 4)) + facet_grid(cols = vars(condicion_mig),rows = vars(cluster_destino)) +
theme_void() +  labs(fill="") + theme( strip.background = element_blank(), panel.background = element_blank(), legend.position = "left")
#dev.off()
patrimonio<- eph_carac %>% mutate(condicion_mig=case_when(migrante==1 ~ "Migrantes",
nativo==1 ~ "Nativos"))
pre<-patrimonio %>% group_by(cluster_destino,  condicion_mig) %>% summarise(total=sum(PONDERA))
post<-patrimonio %>% group_by(cluster_destino,  condicion_mig, PROPIETARIO) %>% summarise(Cantidad=sum(PONDERA))
patrimonio<- left_join(post,pre)
patrimonio$Porcentaje=formattable::percent((patrimonio$Cantidad/patrimonio$total),2)
patrimonio$cluster_destino=paste0("Región ",patrimonio$cluster_destino)
patrimonio <- patrimonio %>% mutate(PROPIETARIO=case_when(PROPIETARIO==1~ "Propietario",
PROPIETARIO==0~ "No propietario"))
patrimonio<- patrimonio %>% group_by(cluster_destino, condicion_mig) %>% mutate(ymax=as.numeric(cumsum(Porcentaje)))
patrimonio<- patrimonio %>% group_by(cluster_destino, condicion_mig) %>% mutate(ymin=c(0, head(ymax, n=-1)))
patrimonio<- patrimonio %>% group_by(cluster_destino, condicion_mig) %>% mutate(labelpos=(ymax+ymin)/2)
#tikz("/home/alejandrochain/Documentos/GitHub/investigacion2021/latex/graficos/vivienda_mig.tex",width = 6, height = 4,sanitize = TRUE)
patrimonio %>% filter(!is.na(condicion_mig)) %>% ggplot(mapping=aes(ymax=ymax, ymin=ymin, xmax=4, xmin=0, fill=PROPIETARIO)) + scale_fill_manual(values = color)+
geom_rect() +
geom_text( x=2, aes(y=labelpos, label=Porcentaje), size=2.5)  +
coord_polar(theta="y") +
xlim(c(0, 4)) + facet_grid(cols = vars(condicion_mig),rows = vars(cluster_destino)) +
theme_void() +  labs(fill="") + theme( strip.background = element_blank(), panel.background = element_blank(), legend.position = "left")
#dev.off()
subsidios<- eph_carac %>% mutate(condicion_mig=case_when(migrante==1 ~ "Migrantes",
nativo==1 ~ "Nativos"))
pre<-subsidios %>% group_by(cluster_destino,  condicion_mig) %>% summarise(total=sum(PONDERA))
post<-subsidios %>% group_by(cluster_destino,  condicion_mig, SUBSIDIO) %>% summarise(Cantidad=sum(PONDERA))
subsidios<- left_join(post,pre)
subsidios$Porcentaje=formattable::percent((subsidios$Cantidad/subsidios$total),2)
subsidios$cluster_destino=paste0("Región",subsidios$cluster_destino)
subsidios <- subsidios %>% mutate(SUBSIDIO=case_when(SUBSIDIO==1~ "Recibe\nsubsidio",
SUBSIDIO==0~ "No recibe\nsubsidio"))
subsidios<- subsidios %>% group_by(cluster_destino, condicion_mig) %>% mutate(ymax=as.numeric(cumsum(Porcentaje)))
subsidios<- subsidios %>% group_by(cluster_destino, condicion_mig) %>% mutate(ymin=c(0, head(ymax, n=-1)))
subsidios<- subsidios %>% group_by(cluster_destino, condicion_mig) %>% mutate(labelpos=(ymax+ymin)/2)
#subsidios %>% filter(!is.na(condicion_mig)) %>% ggplot(mapping=aes(ymax=ymax, ymin=ymin, xmax=4, xmin=0, fill=SUBSIDIO)) + scale_fill_manual(values = color)+
# geom_rect() +
#  geom_text( x=2, aes(y=labelpos, label=Porcentaje), size=2.5)  +
#  coord_polar(theta="y") +
#  xlim(c(0, 4)) + facet_grid(cols = vars(condicion_mig),rows = vars(cluster_destino)) +
#  theme_void() +  labs(fill="") + theme( strip.background = element_blank(), panel.background = element_blank(), legend.position = "left")
#tikz("/home/alejandrochain/Documentos/GitHub/investigacion2021/latex/graficos/subsidio_mig.tex",width = 6, height = 4,sanitize = TRUE)
subsidios %>% filter(!is.na(condicion_mig)) %>% ggplot(mapping=aes(x = condicion_mig, y =Porcentaje, fill=SUBSIDIO, label=Porcentaje)) + geom_col(position = position_fill(),width = 0.8) + facet_grid(cols = vars(cluster_destino)) + xlab("") + ylab("")+scale_y_continuous(labels = scales::percent_format())+ labs(fill="") + scale_fill_manual(values = color) + geom_text(position = position_fill(vjust = 0.4), size=3) + theme(axis.text = element_text(color = "BLACK"), strip.background = element_blank(), panel.background = element_blank())
#dev.off()
subsidios<- eph_carac %>% mutate(condicion_mig=case_when(migrante==1 ~ "Migrantes",
nativo==1 ~ "Nativos"))
pre<-subsidios %>% group_by(cluster_destino,  condicion_mig) %>% summarise(total=sum(PONDERA))
post<-subsidios %>% group_by(cluster_destino,  condicion_mig, SUBSIDIO) %>% summarise(Cantidad=sum(PONDERA))
subsidios<- left_join(post,pre)
subsidios$Porcentaje=formattable::percent((subsidios$Cantidad/subsidios$total),2)
subsidios$cluster_destino=paste0("Región",subsidios$cluster_destino)
subsidios <- subsidios %>% mutate(SUBSIDIO=case_when(SUBSIDIO==1~ "Recibe\nsubsidio",
SUBSIDIO==0~ "No recibe\nsubsidio"))
subsidios<- subsidios %>% group_by(cluster_destino, condicion_mig) %>% mutate(ymax=as.numeric(cumsum(Porcentaje)))
subsidios<- subsidios %>% group_by(cluster_destino, condicion_mig) %>% mutate(ymin=c(0, head(ymax, n=-1)))
subsidios<- subsidios %>% group_by(cluster_destino, condicion_mig) %>% mutate(labelpos=(ymax+ymin)/2)
#subsidios %>% filter(!is.na(condicion_mig)) %>% ggplot(mapping=aes(ymax=ymax, ymin=ymin, xmax=4, xmin=0, fill=SUBSIDIO)) + scale_fill_manual(values = color)+
# geom_rect() +
#  geom_text( x=2, aes(y=labelpos, label=Porcentaje), size=2.5)  +
#  coord_polar(theta="y") +
#  xlim(c(0, 4)) + facet_grid(cols = vars(condicion_mig),rows = vars(cluster_destino)) +
#  theme_void() +  labs(fill="") + theme( strip.background = element_blank(), panel.background = element_blank(), legend.position = "left")
#tikz("/home/alejandrochain/Documentos/GitHub/investigacion2021/latex/graficos/subsidio_mig.tex",width = 6, height = 4,sanitize = TRUE)
subsidios %>% filter(!is.na(condicion_mig)) %>% ggplot(mapping=aes(x = condicion_mig, y =Porcentaje, fill=SUBSIDIO, label=Porcentaje)) + geom_col(position = position_fill(),width = 0.8) + facet_grid(cols = vars(cluster_destino)) + xlab("") + ylab("")+scale_y_continuous(labels = scales::percent_format())+ labs(fill="") + scale_fill_manual(values = color) + geom_text(position = position_fill(vjust = 0.4), size=3) + theme(axis.text = element_text(color = "BLACK"), strip.background = element_blank(), panel.background = element_blank())
#dev.off()
ocupacion<- eph_carac %>% mutate(condicion_mig=case_when(migrante==1 ~ "Migrantes",
nativo==1 ~ "Nativos"),
pea=case_when(ESTADO %in% c(1,2) ~ 1,
ESTADO %in% c(3,4)~ 0))
pre<-ocupacion %>% group_by(cluster_destino,  condicion_mig) %>% summarise(total=sum(PONDERA))
post<-ocupacion %>% group_by(cluster_destino,  condicion_mig, pea) %>% summarise(Cantidad=sum(PONDERA))
ocupacion<- left_join(post,pre)
ocupacion$Porcentaje=formattable::percent((ocupacion$Cantidad/ocupacion$total),2)
ocupacion <- ocupacion %>% mutate(SUBSIDIO=case_when(pea==1~ "Población Economicamente Activa",
pea==0~ "Población Economicamente Inactiva"))
ocupacion<- ocupacion %>% filter(!is.na(condicion_mig) & pea==1) %>% rename("Tasa de Actividad"=Porcentaje, "Región"=cluster_destino) %>% select(Región,condicion_mig,`Tasa de Actividad`)
ocupacion<- pivot_wider(ocupacion,names_from = condicion_mig, values_from = "Tasa de Actividad")
ocupacion
xtable(ocupacion,caption = "Tasa de actividad de nativos y migrantes",label = "cuadro:tasaactiv_mig" ,align = c("c","c","c","c"))
ocupacion<- eph_carac %>% mutate(condicion_mig=case_when(migrante==1 ~ "Migrantes",
nativo==1 ~ "Nativos"),
pea=case_when(ESTADO %in% c(1,2) ~ 1,
ESTADO %in% c(3,4)~ 0),
calif_ocup=case_when(OCUPADO_BAJO==1~ "Calificación baja",
OCUPADO_ALTO==1 ~ "Calificación alta"))
ocupacion<- ocupacion %>% filter(!is.na(calif_ocup))
pre<-ocupacion %>% group_by(cluster_destino,  condicion_mig) %>% summarise(total=sum(PONDERA))
post<-ocupacion %>% group_by(cluster_destino,  condicion_mig, calif_ocup) %>% summarise(Cantidad=sum(PONDERA))
ocupacion<- left_join(post,pre)
ocupacion$Porcentaje=formattable::percent((ocupacion$Cantidad/ocupacion$total),2)
ocupacion$cluster_destino=paste0("\\textbf{Región",ocupacion$cluster_destino,"}")
ocupacion<- ocupacion %>% filter(!is.na(condicion_mig))
ocupacion<- ocupacion %>% group_by(cluster_destino, condicion_mig) %>% mutate(ymax=as.numeric(cumsum(Porcentaje)))
ocupacion<- ocupacion %>% group_by(cluster_destino, condicion_mig) %>% mutate(ymin=c(0, head(ymax, n=-1)))
ocupacion<- ocupacion %>% group_by(cluster_destino, condicion_mig) %>% mutate(labelpos=(ymax+ymin)/2)
#tikz("/home/alejandrochain/Documentos/GitHub/investigacion2021/latex/graficos/calif_mig.tex",width = 6, height = 4,sanitize = TRUE)
ocupacion  %>% ggplot(mapping=aes(ymax=ymax, ymin=ymin, xmax=4, xmin=0, fill=calif_ocup)) + scale_fill_manual(values = color)+
geom_rect() +
geom_text( x=2, aes(y=labelpos, label=Porcentaje), size=2.5)  +
coord_polar(theta="y") +
xlim(c(0, 4)) + facet_grid(rows = vars(condicion_mig),cols = vars(cluster_destino)) +
theme_void() +  labs(fill="") + theme( strip.background = element_blank(), panel.background = element_blank(), legend.position = "bottom")
#dev.off()
ocupacion<- eph_carac %>% mutate(condicion_mig=case_when(migrante==1 ~ "Migrantes",
nativo==1 ~ "Nativos"),
pea=case_when(ESTADO %in% c(1,2) ~ 1,
ESTADO %in% c(3,4)~ 0),
calif_ocup=case_when(OCUPADO_BAJO==1~ "Calificación baja",
OCUPADO_ALTO==1 ~ "Calificación alta"))
ocupacion<- ocupacion %>% filter(!is.na(calif_ocup))
pre<-ocupacion %>% group_by(cluster_destino,  condicion_mig) %>% summarise(total=sum(PONDERA))
post<-ocupacion %>% group_by(cluster_destino,  condicion_mig, calif_ocup) %>% summarise(Cantidad=sum(PONDERA))
ocupacion<- left_join(post,pre)
ocupacion$Porcentaje=formattable::percent((ocupacion$Cantidad/ocupacion$total),2)
ocupacion$cluster_destino=paste0("Región ",ocupacion$cluster_destino)
ocupacion<- ocupacion %>% filter(!is.na(condicion_mig))
ocupacion<- ocupacion %>% group_by(cluster_destino, condicion_mig) %>% mutate(ymax=as.numeric(cumsum(Porcentaje)))
ocupacion<- ocupacion %>% group_by(cluster_destino, condicion_mig) %>% mutate(ymin=c(0, head(ymax, n=-1)))
ocupacion<- ocupacion %>% group_by(cluster_destino, condicion_mig) %>% mutate(labelpos=(ymax+ymin)/2)
#tikz("/home/alejandrochain/Documentos/GitHub/investigacion2021/latex/graficos/calif_mig.tex",width = 6, height = 4,sanitize = TRUE)
ocupacion  %>% ggplot(mapping=aes(ymax=ymax, ymin=ymin, xmax=4, xmin=0, fill=calif_ocup)) + scale_fill_manual(values = color)+
geom_rect() +
geom_text( x=2, aes(y=labelpos, label=Porcentaje), size=2.5)  +
coord_polar(theta="y") +
xlim(c(0, 4)) + facet_grid(rows = vars(condicion_mig),cols = vars(cluster_destino)) +
theme_void() +  labs(fill="") + theme( strip.background = element_blank(), panel.background = element_blank(), legend.position = "bottom")
#dev.off()
org_fam<- eph_carac %>% mutate(condicion_mig=case_when(migrante==1 ~ "Migrantes",
nativo==1 ~ "Nativos"),
pea=case_when(ESTADO %in% c(1,2) ~ 1,
ESTADO %in% c(3,4)~ 0),
estado_civil=case_when(SOLTERO_C_HIJO==1~ "Soltero/a con hijo/a",
CASADO_C_HIJO==1 ~ "Casado/a con hijo/a",
CASADO_S_HIJO==1 ~ "Casado/a sin hijo/a",
CASADO==0 & HIJO_DUMMY==0 ~ "Soltero/a sin hijo/a"))
org_fam<- org_fam %>% filter(!is.na(estado_civil) & CH06>=18)
pre<-org_fam %>% group_by(cluster_destino,  condicion_mig) %>% summarise(total=sum(PONDERA))
post<-org_fam %>% group_by(cluster_destino,  condicion_mig, estado_civil) %>% summarise(Cantidad=sum(PONDERA))
org_fam<- left_join(post,pre)
org_fam$Porcentaje=formattable::percent((org_fam$Cantidad/org_fam$total),2)
org_fam$cluster_destino=paste0("Región ",org_fam$cluster_destino)
org_fam<- org_fam %>% filter(!is.na(condicion_mig))
org_fam
#tikz("/home/alejandrochain/Documentos/GitHub/investigacion2021/latex/graficos/estadociv_mig.tex",width = 6, height = 4,sanitize = TRUE)
org_fam  %>%   ggplot(mapping=aes(x = condicion_mig, y =Porcentaje, fill=estado_civil, label=Porcentaje)) + geom_col(position = position_fill(),width = 0.8) + facet_grid(cols = vars(cluster_destino)) + xlab("") + ylab("")+scale_y_continuous(labels = scales::percent_format())+ labs(fill="") + scale_fill_manual(values = color) + geom_text(position = position_fill(vjust = 0.4), size=3) + theme(axis.text = element_text(color = "BLACK"), strip.background = element_blank(), panel.background = element_blank())
#dev.off()
niveled<- eph_carac %>% mutate(condicion_mig=case_when(migrante==1 ~ "Migrantes",
nativo==1 ~ "Nativos"),
pea=case_when(ESTADO %in% c(1,2) ~ 1,
ESTADO %in% c(3,4)~ 0),
niveled=case_when(niveled %in% c("Sin\ninstrucción","Primario\nCompleto") ~ "Nivel educativo\nBajo",
niveled=="Secundario\nCompleto" ~ "Nivel educativo\nmedio",
niveled== "Superior/Universitario\ncompleto" ~ "Nivel educativo\nelevado"))
niveled$niveled<- factor(niveled$niveled, levels=c("Nivel educativo\nelevado","Nivel educativo\nmedio","Nivel educativo\nBajo"))
niveled<- niveled %>% filter(!is.na(niveled) & CH06>=18)
pre<-niveled %>% group_by(cluster_destino,  condicion_mig) %>% summarise(total=sum(PONDERA))
post<-niveled %>% group_by(cluster_destino,  condicion_mig, niveled) %>% summarise(Cantidad=sum(PONDERA))
niveled<- left_join(post,pre)
niveled$Porcentaje=formattable::percent((niveled$Cantidad/niveled$total),2)
niveled$cluster_destino=paste0("Región ",niveled$cluster_destino)
niveled<- niveled %>% filter(!is.na(condicion_mig))
niveled
#tikz("/home/alejandrochain/Documentos/GitHub/investigacion2021/latex/graficos/niveled_mig.tex",width = 6, height = 4,sanitize = TRUE)
niveled  %>%   ggplot(mapping=aes(x = condicion_mig, y =Porcentaje, fill=niveled, label=Porcentaje)) + geom_col(position = position_fill(),width = 0.8) + facet_grid(cols = vars(cluster_destino)) + xlab("") + ylab("")+scale_y_continuous(labels = scales::percent_format())+ labs(fill="") + scale_fill_manual(values = color) + geom_text(position = position_fill(vjust = 0.4), size=3) + theme(axis.text = element_text(color = "BLACK"), strip.background = element_blank(), panel.background = element_blank())
#dev.off()
View(cluster_nombres_eph)
xtable(cluster_multinom_model)
#tomamos la base completa y definimos el cluster de destino para los migrantes
cluster_multinom<- left_join(ephtotal,cluster_destino)
#hacemos lo mismo con el cluster de origen de los migrantes
cluster_multinom<- left_join(cluster_multinom,cluster_nombres_eph_ch15)
cluster_multinom<- cluster_multinom %>% filter(CH03==1)
cluster_multinom<- cluster_multinom %>% filter(CH15%in% c(1,2,3))
# definimos la variable inmigrante que serà igual a 0 para los que son nativos de la provincia en la que habitan
# igual a 1 si la region a la que migraron es la 1
#igual a 2 si la region a la que migraron es la 2
#igual a 3 si la region a la que migraron es la 3
cluster_multinom<- cluster_multinom %>% mutate(inmigrante=case_when(#cluster_origen==3  &  CH15==3 &   cluster_destino==3 ~ 3,
cluster_destino==3 & CH15 %in% c(1,2) ~0,
cluster_origen==3  &  CH15==3 &   cluster_destino==2 ~2,
cluster_origen==3  &  CH15==3 &   cluster_destino==1 ~1,
#cluster_origen==2  &  CH15==3 &   cluster_destino==2 ~ 2,
cluster_destino==2 & CH15 %in% c(1,2) ~0,
cluster_origen==2  &  CH15==3 &   cluster_destino==3 ~3,
cluster_origen==2  &  CH15==3 &   cluster_destino==1 ~1,
#cluster_origen==1  &  CH15==3 &   cluster_destino==1 ~ 1,
cluster_destino==1 & CH15 %in% c(1,2) ~0,
cluster_origen==1  &  CH15==3 &   cluster_destino==3 ~3,
cluster_origen==1  &  CH15==3 &   cluster_destino==2 ~2))
#filtramos la base para solo tener en cuenta nativos y migrantes de regiones distintas de las que tienen de origen
cluster_multinom<- cluster_multinom %>% filter(!is.na(inmigrante))
table(cluster_multinom$inmigrante)
# definimos que el grupo base es el de los nativos
cluster_multinom$inmigrante<- as.factor(cluster_multinom$inmigrante)
cluster_multinom$inmigrante<- relevel(cluster_multinom$inmigrante, ref = "0")
# estimamos el modelo con los regresores determinados
cluster_multinom_model<-multinom(inmigrante~ hombre + POBRE + SUBSIDIO + OCUPADO_BAJO+OCUPADO_ALTO +  SOLTERO_C_HIJO+CASADO_S_HIJO + CASADO_C_HIJO+ PROPIETARIO+  + edad + edad2  + medio + alto, data=cluster_multinom)
#vemos el resultado
summary(cluster_multinom_model)
xtable(cluster_multinom_model)
stargazer(cluster_multinom_model,type = 'text)
stargazer(cluster_multinom_model,type = 'text' )
stargazer(cluster_multinom_model,type = 'text' )
stargazer(cluster_multinom_model,type = 'text' )
