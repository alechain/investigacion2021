resumen_cluster<-aggregate(datos3,by = list(cluster=km_clusters$cluster),FUN = median)
resumen_g<-resumen_cluster %>% pivot_longer(-cluster)
resumen2<-data.frame(t(resumen_cluster))
resumen2<- resumen2 %>% rename("Cluster 1"=X1,"Cluster 2"=X2, "Cluster 3"=X3) %>% rownames_to_column()
resumen2<- resumen2 %>% rename("Indicadores"=rowname)
resumen2<- resumen2 %>% filter(Indicadores!="cluster")
resumen2$`Cluster 1`<- formattable::comma((resumen2$`Cluster 1`),2)
resumen2$`Cluster 2`<- formattable::comma((resumen2$`Cluster 2`),2)
resumen2$`Cluster 3`<- formattable::comma((resumen2$`Cluster 3`),2)
resumen2$`Cluster 1`[1]<- formattable::comma((resumen2$`Cluster 1`[1]),0)
resumen2$`Cluster 2`[1]<- formattable::comma((resumen2$`Cluster 2`[1]),0)
resumen2$`Cluster 3`[1]<- formattable::comma((resumen2$`Cluster 3`[1]),0)
kableExtra::kable(resumen2,format = "markdown",caption = "Resumen de indicadores por cluster")
#xtable(resumen2, type="latex",auto = TRUE)
#agregamos a la base de datos original la denominación de cada cluster
datos<- cbind(datos,cluster=nomenclador)
clustersprov<-datos %>% select(Provincia,cluster)
datos %>% group_by(cluster) %>% summarise(habitantes=sum(`Habitantes (2010)`))
datos %>% group_by(cluster) %>% summarise(Provincia)
datos<- datos %>% mutate(Provincia=case_when(Provincia=="Tierra del Fuego, Antártida e Islas del Atlántico Sur (4)"~ "Tierra del Fuego, Antártida e Islas del Atlántico Sur",
TRUE~Provincia)) %>% arrange(Provincia)
fviz_cluster(km_clusters, data = datos4,
palette = c("RED", "BLUE","GREEN"),
ellipse.type = "euclid", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
labelsize = 6, ) + theme_classic(base_family ="LM Roman 10" ) + labs(title="Plot de clusters resultantes de la macrolocalización") + theme(text=element_text(family = "LM Roman 10"), title = element_text(face = "bold"))
#ephtotal<- read_rds("ephtotal.Rds")
### provincia
provincia<- read.csv("provincias.csv", sep=",", header = T, encoding = "UTF-8")
provincia<- provincia %>% arrange(PROVINCIA)
provincia1<- provincia %>% select(PROVINCIA,CH15_COD)
provincia2<- provincia %>% select(PROVINCIA,CH16_COD)
#
nombredato<- datos %>% select(Provincia)
nombredato
name_prov_para_datos<-bind_cols(nombredato, provincia) %>% select(-PROVINCIA)
datos<- left_join(datos,name_prov_para_datos)
#
cluster_nombres_eph<- datos %>% select(c("Provincia","cluster","CH15_COD","CH16_COD"))
cluster_nombres_eph<- cluster_nombres_eph %>% rename(provincia_origen=Provincia, cluster_origen=cluster)
cluster_nombres_eph_ch15<-cluster_nombres_eph %>% select(provincia_origen,CH15_COD, cluster_origen)
##############################################################################################
ephinmi<- ephtotal %>% filter(CH15==3)
ephinmi<- left_join(ephinmi, cluster_nombres_eph_ch15)
ephinmi %>% filter(!is.na(SECTOR_ACT)) %>% group_by(SECTOR_ACT) %>% summarise(porcentaje=formattable::percent (sum(PONDERA)/sum(ephinmi$PONDERA[!is.na(SECTOR_ACT)]))) %>% arrange(-porcentaje)
ephinmi %>% filter(!is.na(CALIFICACION)) %>% group_by(CALIFICACION) %>% summarise(porcentaje=formattable::percent (sum(PONDERA)/sum(ephinmi$PONDERA[!is.na(CALIFICACION)]))) %>% arrange(-porcentaje)
ephinmi<- ephinmi %>% filter(!is.na(provincia_origen))
prov_por_aglo<- read_csv("provincias_por_aglomerado.csv")
cluster_destino<- cluster_nombres_eph %>% select(provincia_origen,cluster_origen) %>% rename(provincia_destino=provincia_origen, cluster_destino=cluster_origen)
cluster_destino<- left_join(prov_por_aglo,cluster_destino)
ephinmi<- left_join(ephinmi,cluster_destino)
cuadro_2<-ephinmi %>% group_by("Cluster"=cluster_origen) %>% summarise("Porcentaje"=formattable::percent((sum(PONDERA)/sum(ephinmi$PONDERA))))
kableExtra::kable(cuadro_2,format = "markdown",caption = "Cluster de origen de los migrantes")
cuadro_3<-ephinmi %>% group_by("Cluster"=cluster_destino) %>% summarise("Porcentaje"=formattable::percent((sum(PONDERA)/sum(ephinmi$PONDERA))))
kableExtra::kable(cuadro_3,format = "markdown",caption = "Cluster de destino de los migrantes")
cuadro_4<- ephinmi %>% group_by("Provincia"=provincia_destino) %>% summarise("Inmigrantes"=sum(PONDERA))
cuadro_5<- ephinmi %>% group_by("Provincia"=provincia_origen) %>% summarise("Emigrantes"=sum(PONDERA))
cuadro_6<- full_join(cuadro_4,cuadro_5)
######
prov_aglo<- prov_por_aglo %>% rename(provincia=provincia_destino)
ephtotal<- left_join(ephtotal, prov_aglo)
prov_cluster<- clustersprov %>% mutate(Provincia=case_when(Provincia=="Tierra del Fuego, Antártida e Islas del Atlántico Sur (4)"~ "Tierra del Fuego, Antártida e Islas del Atlántico Sur",                              TRUE ~ Provincia))
#######
cuadro_7<- ephtotal %>% group_by("Provincia"=provincia) %>% summarise("Poblacion"=sum(PONDERA))
cuadro_8<- left_join(cuadro_6,cuadro_7)
cuadro_8<- left_join(cuadro_8,prov_cluster)
cuadro_8<- cuadro_8 %>% mutate(tasa_inmigracion=Inmigrantes/Poblacion, tasa_emigracion=Emigrantes/Poblacion, tasa_neta=tasa_inmigracion-tasa_emigracion)
cuadro_8$cluster<- factor(cuadro_8$cluster, levels = c("1","2","3"))
cuadro_8 %>% ggplot(mapping=aes(x=tasa_inmigracion,y = tasa_emigracion, label=Provincia, color=cluster)) + geom_point(show.legend = T) + geom_abline(intercept=-0,slope = 1)+ scale_color_manual(values = color)+ scale_y_continuous(labels = scales::percent_format(),limits = c(0,0.75))+scale_x_continuous(labels = scales::percent_format(),limits = c(0,0.75)) + xlab("Tasa de inmigración") + ylab("Tasa de emigración")+ labs(title = "Tasa de inmigración y emigración por provincia", color="Cluster:")+ ggrepel::geom_text_repel(size=3,family = "LM Roman 10",show.legend = F)+theme(text=element_text(family = "LM Roman 10"),axis.line = element_line(color="BLACK") ,axis.text = element_text(size=7, color = "BLACK") , panel.background = element_blank(),  axis.title = element_text(size=7), title = element_text(face = "bold"), legend.key = element_blank())
datos_mapa_prov<- st_read( "./mapa/gadm36_ARG_1.shp")
datos_mapa_prov<- datos_mapa_prov %>% rename(Provincia=NAME_1)
datos_mapa_prov<- datos_mapa_prov %>% mutate(Provincia=case_when(Provincia=="Ciudad de Buenos Aires"  ~ "Ciudad Autónoma de Buenos Aires",
Provincia=="Tierra del Fuego"  ~"Tierra del Fuego, Antártida e Islas del Atlántico Sur",
TRUE~Provincia))
datos_mapa_prov<- inner_join(datos_mapa_prov, cuadro_8)
View(cuadro_8)
ggplot(datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion)) + scale_fill_viridis()
ggplot(datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion)) + viridis::scale_fill_viridis()
cuadro_8<- cuadro_8 %>% mutate(tasa_inmigracion=formattable::percent(tasa_inmigracion),tasa_emigracion=formattable::percent(tasa_emigracion))
datos_mapa_prov<- inner_join(datos_mapa_prov, cuadro_8)
datos_mapa_prov<- st_read( "./mapa/gadm36_ARG_1.shp")
datos_mapa_prov<- datos_mapa_prov %>% rename(Provincia=NAME_1)
datos_mapa_prov<- datos_mapa_prov %>% mutate(Provincia=case_when(Provincia=="Ciudad de Buenos Aires"  ~ "Ciudad Autónoma de Buenos Aires",
Provincia=="Tierra del Fuego"  ~"Tierra del Fuego, Antártida e Islas del Atlántico Sur",
TRUE~Provincia))
cuadro_8<- cuadro_8 %>% mutate(tasa_inmigracion=formattable::percent(tasa_inmigracion),tasa_emigracion=formattable::percent(tasa_emigracion))
datos_mapa_prov<- inner_join(datos_mapa_prov, cuadro_8)
ggplot(datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion)) + viridis::scale_fill_viridis()
library(tmap)
library(tmaptools)
tm_shape(datos_mapa_prov) %>% tm_fill()
tm_shape(datos_mapa_prov) %>% tm_polygons()
tm_shape(data=datos_mapa_prov) %>% tm_polygons()
tm_shape(atos_mapa_prov) %>% tm_polygons()
tm_sf(datos_mapa_prov)
datos_mapa_prov<- st_read( "./mapa/gadm36_ARG_1.shp")
tm_shape(datos_mapa_prov) %>% tm_polygons()
tm_shape(shp = datos_mapa_prov) %>% tm_polygons()
datos_mapa_prov<- st_read( "./mapa/gadm36_ARG_1.shp")
datos_mapa_prov<- st_read( "./mapa/gadm36_ARG_1.shp")
tm_shape(shp = datos_mapa_prov) %>% tm_polygons()
tm_shape(shp = datos_mapa_prov) %>% tm_polygons("NAME_1")
tm_shape(datos_mapa_prov) %>% tm_polygons("NAME_1")
library(tmap)
library(tmaptools)
tm_shape(datos_mapa_prov) %>% tm_polygons("NAME_1")
datos_mapa_prov<- st_read( "./mapa/gadm36_ARG_1.shp")
setwd("/home/alejandrochain/Documentos/GitHub/investigacion2021/macrolocalizacion")
knitr::opts_chunk$set(echo = FALSE, dev="cairo_pdf")
library(readr)
library(tidyverse)
library(factoextra)
library(cluster)
library(fpc)
#estos sirven para formatear pa latex
library(stargazer)
library(xtable)
library(extrafont)
library(eph)
library(readxl)
library(sf)
library(tmap)
library(tmaptools)
color<- c('#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628','#f781bf')
## Individual
ephi<- get_microdata(year=2017:2019, trimester = 1:4, type = "individual")
ephi<- ephi %>%
dplyr::select(microdata) %>%
tidyr::unnest(cols = c(microdata))
### 2016
ephi2<- get_microdata(year=2016, trimester = 2:4, type = "individual")
ephi2<- ephi2 %>%
dplyr::select(microdata) %>%
tidyr::unnest(cols = c(microdata))
ephi<- bind_rows(ephi,ephi2)
ephi<- ephi %>% arrange(-ANO4, -TRIMESTRE)
## Hogar
ephh<- get_microdata(year=2017:2019, trimester = 1:4, type = "hogar")
ephh<- ephh %>%
dplyr::select(microdata) %>%
tidyr::unnest(cols = c(microdata))
### 2016
ephh2<- get_microdata(year=2016, trimester = 2:4, type = "hogar")
ephh2<- ephh2 %>%
dplyr::select(microdata) %>%
tidyr::unnest(cols = c(microdata))
ephh<- bind_rows(ephh,ephh2)
ephh<- ephh %>% arrange(-ANO4, -TRIMESTRE)
### mergeado
ephtotal<- left_join(ephi,ephh)
### aglomerado
aglomerado<- read_excel("aglomerado.xlsx",sheet = 4)
### Sector
sectorcaes<- read.csv("SECTORESCAES.csv", sep=",", header = T, encoding = "UTF-8", colClasses = "character")
### provincia
provincia<- read.csv("provincias.csv", sep=",", header = T)
provincia1<- provincia %>% select(PROVINCIA,CH15_COD)
provincia2<- provincia %>% select(PROVINCIA,CH16_COD)
ephtotal<- ephtotal %>% filter(ESTADO!=0) %>%  mutate(Sexo=as.character(CH04),
Sexo=case_when(Sexo=="1" ~ "Hombres",
Sexo=="2" ~ "Mujeres"),
PP04D_COD = case_when(nchar(PP04D_COD) == 5 ~ PP04D_COD,
nchar(PP04D_COD) == 4 ~ paste0("0", PP04D_COD),
nchar(PP04D_COD) == 3 ~ paste0("00", PP04D_COD),
nchar(PP04D_COD) == 2 ~ paste0("000", PP04D_COD),
nchar(PP04D_COD) == 1 ~ paste0("0000", PP04D_COD)),
CALIFICACION = substr(PP04D_COD, 5, 5),
JERARQUIA = substr(PP04D_COD, 3, 3),
JERARQUIA = case_when(JERARQUIA=="0" ~ "Dirección",
JERARQUIA=="2" ~ "Jefes",
JERARQUIA=="1" ~ "Cuentapropia",
JERARQUIA=="3" ~ "Trabajadores\nAsalariados"),
JERARQUIA = factor(JERARQUIA, c("Dirección", "Jefes", "Trabajadores\nAsalariados", "Cuentapropia")),
PEA= case_when(ESTADO==3 ~ 0,
ESTADO==4 ~ 0,
ESTADO==1 ~ 1,
ESTADO==2 ~ 1),
PP04D_COD = as.character(PP04D_COD),
CALIFICACION = case_when(CALIFICACION=="1" ~ "Profesionales",
CALIFICACION=="2" ~ "Técnicos",
CALIFICACION=="3" ~ "Operativos",
CALIFICACION=="4" ~ "No Calificados"),
CALIFICACION = factor(CALIFICACION, c("No Calificados", "Operativos", "Técnicos", "Profesionales")),
PP04B_COD=as.character(PP04B_COD),
PP04B_COD=case_when(nchar(PP04B_COD)==4~PP04B_COD,
nchar(PP04B_COD)==1~ paste0("0",PP04B_COD,"00"),
nchar(PP04B_COD)==2~ paste0(PP04B_COD,"00"),
nchar(PP04B_COD)==3~ paste0("0",PP04B_COD)),
SECTOR= substr(PP04B_COD,1,2),
HORASSEM=PP3E_TOT+PP3F_TOT,
niveled=case_when(NIVEL_ED==1 | NIVEL_ED==7 ~ "Sin\ninstrucción",
NIVEL_ED %in% c(2,3) ~ "Primario\nCompleto",
NIVEL_ED %in% c(4,5)~ "Secundario\nCompleto",
NIVEL_ED == 6 ~ "Superior/Universitario\ncompleto"),
niveled=factor(niveled, levels = c("Sin\ninstrucción","Primario\nCompleto","Secundario\nCompleto","Superior/Universitario\ncompleto")))
ephtotal<- left_join(ephtotal,aglomerado)
ephtotal<- left_join(ephtotal, sectorcaes)
datos<- read_csv("macroloc_para_r.csv",col_names = T, row.names(1))
datos3<- datos %>% select(-Provincia)
row.names(datos3)<- datos$Provincia
datos4<- datos3
#datos<- datos %>% mutate(`Densidad poblacional: Hab/km² (2010)`=log(`Densidad poblacional: Hab/km² (2010)`))
datos3<-datos3 %>% select(-c(`Densidad poblacional: Hab/km² (2010)`))
datos_norm<- scale(datos3)
factoextra::fviz_nbclust(datos_norm,kmeans, method="wss")+ geom_vline(xintercept = 3, colour="RED", linetype="dotted") + theme_classic() + labs(title="Numero óptimo de clusters") + xlab("Número de clusters") + ylab("WSS")+ theme(text=element_text(family = "LM Roman 10"), title = element_text(face = "bold"))
set.seed(1118)
km_clusters<- kmeans(datos_norm,centers = 3,iter.max = 1000,nstart = 2000)
nomenclador<- km_clusters$cluster
resumen_cluster<-aggregate(datos3,by = list(cluster=km_clusters$cluster),FUN = median)
resumen_g<-resumen_cluster %>% pivot_longer(-cluster)
resumen2<-data.frame(t(resumen_cluster))
resumen2<- resumen2 %>% rename("Cluster 1"=X1,"Cluster 2"=X2, "Cluster 3"=X3) %>% rownames_to_column()
resumen2<- resumen2 %>% rename("Indicadores"=rowname)
resumen2<- resumen2 %>% filter(Indicadores!="cluster")
resumen2$`Cluster 1`<- formattable::comma((resumen2$`Cluster 1`),2)
resumen2$`Cluster 2`<- formattable::comma((resumen2$`Cluster 2`),2)
resumen2$`Cluster 3`<- formattable::comma((resumen2$`Cluster 3`),2)
resumen2$`Cluster 1`[1]<- formattable::comma((resumen2$`Cluster 1`[1]),0)
resumen2$`Cluster 2`[1]<- formattable::comma((resumen2$`Cluster 2`[1]),0)
resumen2$`Cluster 3`[1]<- formattable::comma((resumen2$`Cluster 3`[1]),0)
kableExtra::kable(resumen2,format = "markdown",caption = "Resumen de indicadores por cluster")
#xtable(resumen2, type="latex",auto = TRUE)
#agregamos a la base de datos original la denominación de cada cluster
datos<- cbind(datos,cluster=nomenclador)
clustersprov<-datos %>% select(Provincia,cluster)
datos %>% group_by(cluster) %>% summarise(habitantes=sum(`Habitantes (2010)`))
datos %>% group_by(cluster) %>% summarise(Provincia)
datos<- datos %>% mutate(Provincia=case_when(Provincia=="Tierra del Fuego, Antártida e Islas del Atlántico Sur (4)"~ "Tierra del Fuego, Antártida e Islas del Atlántico Sur",
TRUE~Provincia)) %>% arrange(Provincia)
fviz_cluster(km_clusters, data = datos4,
palette = c("RED", "BLUE","GREEN"),
ellipse.type = "euclid", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
labelsize = 6, ) + theme_classic(base_family ="LM Roman 10" ) + labs(title="Plot de clusters resultantes de la macrolocalización") + theme(text=element_text(family = "LM Roman 10"), title = element_text(face = "bold"))
#ephtotal<- read_rds("ephtotal.Rds")
### provincia
provincia<- read.csv("provincias.csv", sep=",", header = T, encoding = "UTF-8")
provincia<- provincia %>% arrange(PROVINCIA)
provincia1<- provincia %>% select(PROVINCIA,CH15_COD)
provincia2<- provincia %>% select(PROVINCIA,CH16_COD)
#
nombredato<- datos %>% select(Provincia)
nombredato
name_prov_para_datos<-bind_cols(nombredato, provincia) %>% select(-PROVINCIA)
datos<- left_join(datos,name_prov_para_datos)
#
cluster_nombres_eph<- datos %>% select(c("Provincia","cluster","CH15_COD","CH16_COD"))
cluster_nombres_eph<- cluster_nombres_eph %>% rename(provincia_origen=Provincia, cluster_origen=cluster)
cluster_nombres_eph_ch15<-cluster_nombres_eph %>% select(provincia_origen,CH15_COD, cluster_origen)
##############################################################################################
ephinmi<- ephtotal %>% filter(CH15==3)
ephinmi<- left_join(ephinmi, cluster_nombres_eph_ch15)
ephinmi %>% filter(!is.na(SECTOR_ACT)) %>% group_by(SECTOR_ACT) %>% summarise(porcentaje=formattable::percent (sum(PONDERA)/sum(ephinmi$PONDERA[!is.na(SECTOR_ACT)]))) %>% arrange(-porcentaje)
ephinmi %>% filter(!is.na(CALIFICACION)) %>% group_by(CALIFICACION) %>% summarise(porcentaje=formattable::percent (sum(PONDERA)/sum(ephinmi$PONDERA[!is.na(CALIFICACION)]))) %>% arrange(-porcentaje)
ephinmi<- ephinmi %>% filter(!is.na(provincia_origen))
prov_por_aglo<- read_csv("provincias_por_aglomerado.csv")
cluster_destino<- cluster_nombres_eph %>% select(provincia_origen,cluster_origen) %>% rename(provincia_destino=provincia_origen, cluster_destino=cluster_origen)
cluster_destino<- left_join(prov_por_aglo,cluster_destino)
ephinmi<- left_join(ephinmi,cluster_destino)
cuadro_2<-ephinmi %>% group_by("Cluster"=cluster_origen) %>% summarise("Porcentaje"=formattable::percent((sum(PONDERA)/sum(ephinmi$PONDERA))))
kableExtra::kable(cuadro_2,format = "markdown",caption = "Cluster de origen de los migrantes")
cuadro_3<-ephinmi %>% group_by("Cluster"=cluster_destino) %>% summarise("Porcentaje"=formattable::percent((sum(PONDERA)/sum(ephinmi$PONDERA))))
kableExtra::kable(cuadro_3,format = "markdown",caption = "Cluster de destino de los migrantes")
cuadro_4<- ephinmi %>% group_by("Provincia"=provincia_destino) %>% summarise("Inmigrantes"=sum(PONDERA))
cuadro_5<- ephinmi %>% group_by("Provincia"=provincia_origen) %>% summarise("Emigrantes"=sum(PONDERA))
cuadro_6<- full_join(cuadro_4,cuadro_5)
######
prov_aglo<- prov_por_aglo %>% rename(provincia=provincia_destino)
ephtotal<- left_join(ephtotal, prov_aglo)
prov_cluster<- clustersprov %>% mutate(Provincia=case_when(Provincia=="Tierra del Fuego, Antártida e Islas del Atlántico Sur (4)"~ "Tierra del Fuego, Antártida e Islas del Atlántico Sur",                              TRUE ~ Provincia))
#######
cuadro_7<- ephtotal %>% group_by("Provincia"=provincia) %>% summarise("Poblacion"=sum(PONDERA))
cuadro_8<- left_join(cuadro_6,cuadro_7)
cuadro_8<- left_join(cuadro_8,prov_cluster)
cuadro_8<- cuadro_8 %>% mutate(tasa_inmigracion=Inmigrantes/Poblacion, tasa_emigracion=Emigrantes/Poblacion, tasa_neta=tasa_inmigracion-tasa_emigracion)
cuadro_8$cluster<- factor(cuadro_8$cluster, levels = c("1","2","3"))
cuadro_8 %>% ggplot(mapping=aes(x=tasa_inmigracion,y = tasa_emigracion, label=Provincia, color=cluster)) + geom_point(show.legend = T) + geom_abline(intercept=-0,slope = 1)+ scale_color_manual(values = color)+ scale_y_continuous(labels = scales::percent_format(),limits = c(0,0.75))+scale_x_continuous(labels = scales::percent_format(),limits = c(0,0.75)) + xlab("Tasa de inmigración") + ylab("Tasa de emigración")+ labs(title = "Tasa de inmigración y emigración por provincia", color="Cluster:")+ ggrepel::geom_text_repel(size=3,family = "LM Roman 10",show.legend = F)+theme(text=element_text(family = "LM Roman 10"),axis.line = element_line(color="BLACK") ,axis.text = element_text(size=7, color = "BLACK") , panel.background = element_blank(),  axis.title = element_text(size=7), title = element_text(face = "bold"), legend.key = element_blank())
datos_mapa_prov<- st_read( "./mapa/gadm36_ARG_1.shp")
tm_shape(datos_mapa_prov) %>% tm_polygons("NAME_1")
View(datos_mapa_prov)
class(datos_mapa_prov)
class(datos_mapa_prov$geometry)
class(datos_mapa_prov$GID_0)
tm_shape(shp = datos_mapa_prov)
tm_shape(shp = datos_mapa_prov) + tm_polygons()
datos_mapa_prov<- datos_mapa_prov %>% rename(Provincia=NAME_1)
datos_mapa_prov<- datos_mapa_prov %>% mutate(Provincia=case_when(Provincia=="Ciudad de Buenos Aires"  ~ "Ciudad Autónoma de Buenos Aires",
Provincia=="Tierra del Fuego"  ~"Tierra del Fuego, Antártida e Islas del Atlántico Sur",
TRUE~Provincia))
cuadro_8<- cuadro_8 %>% mutate(tasa_inmigracion=formattable::percent(tasa_inmigracion),tasa_emigracion=formattable::percent(tasa_emigracion))
datos_mapa_prov<- inner_join(datos_mapa_prov, cuadro_8)
tm_shape(shp = datos_mapa_prov) + tm_polygons(tasa_inmigracion)
tm_shape(shp = datos_mapa_prov) + tm_polygons(datos_mapa_prov$tasa_inmigracion)
tm_shape(shp = datos_mapa_prov) + tm_fill(datos_mapa_prov$tasa_inmigracion)
tm_shape(shp = datos_mapa_prov) + tm_fill('tasa_inmigracion')
tm_shape(shp = datos_mapa_prov) + tm_fill('tasa_inmigracion',style = 'cont')
tm_shape(shp = datos_mapa_prov) + tm_borders() + tm_fill('tasa_inmigracion',style = 'cont')
tm_shape(shp = datos_mapa_prov) + tm_borders() + tm_polygons('tasa_inmigracion',style = 'cont')
ggplot() + geom_sf(datos_mapa_prov)
ggplot() + geom_sf(aes(datos_mapa_prov))
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion))
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion)) + viridis::scale_fill_viridis(labels=percent)
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion)) + scale_fill_continuous(label=percent)
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion)) + scale_fill_gradient(label=percent)
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion)) + scale_fill_gradient(label=scales::percent)
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion)) + viridis::scale_fill_viridis(label=scales::percent)
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion)) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:")
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion)) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:") + geom_text(cluster)
View(cuadro_8)
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion, label=cluster)) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:") + geom_text()
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion)) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:") + geom_text(aes(label=datos_mapa_prov$cluster))
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion, label=cluster)) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:") + geom_label()
datos_mapa_prov$geometry
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion)) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:")
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_emigracion)) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de emigración:")
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion)) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:")
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_emigracion)) + theme(text=element_text(family = "LM Roman 10")) viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de emigración:")
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_emigracion)) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de emigración:")
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion)) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:") + theme(text=element_text(family="LM Roman 10"))
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion)) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:") + theme(text=element_text(family="LM Roman 10"), plot.background = element_blank() )
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion)) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:") + theme(text=element_text(family="LM Roman 10"), background = element_blank() )
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion)) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:") + theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() )
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion, color="WHITE")) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:") + theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() )
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion)color="WHITE") + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:") + theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() )
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion),color="WHITE") + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:") + theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() )
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion),color="BLACK") + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:") + theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() )
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion),color="BLACK", alpha=0.6) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:") + theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() )
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion),color="BLACK", size=1 ) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:") + theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() )
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion),color="BLACK", size=0.4 ) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:") + theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() )
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion),color="BLACK", size=0.3 ) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:") + theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() )
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion),color="BLACK", size=0.1 ) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:") + theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() )
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion),color="BLACK", size=0.2 ) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:") + theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() )
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion),color="BLACK", size=0.2 ) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:") + theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() , axis.text = element_blank())
ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion),color="BLACK", size=0.2 ) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:") + theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() , axis.text = element_blank(), axis.ticks = element_blank())
eph::centroides_aglomerados
cuadro_8 %>% class()
cuadro_8 %>% class(ls())
cuadro_8[]
names(cuadro_8)
cuadro_8 %>% class(cuadro_8[])
summary(cuadro_8)
#######
cuadro_7<- ephtotal %>% group_by("Provincia"=provincia, AGLOMERADO) %>% summarise("Poblacion"=sum(PONDERA))
View(cuadro_7)
install.packages('gridExtra')
install.packages("gridExtra")
gridExtra::arrangeGrob(mapa_emigracion,mapa_inmigracion)
mapa_inmigracion<-ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion),color="BLACK", size=0.2 ) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:") + theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() , axis.text = element_blank(), axis.ticks = element_blank())
mapa_emigracion<- ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_emigracion),color="BLACK", size=0.2 ) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de emigración:") + theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() , axis.text = element_blank(), axis.ticks = element_blank())
gridExtra::arrangeGrob(mapa_emigracion,mapa_inmigracion)
gridExtra::grid.arrange(mapa_emigracion,mapa_inmigracion)
gridExtra::grid.arrange(mapa_emigracion,mapa_inmigracion, ncol=1)
gridExtra::grid.arrange(mapa_emigracion,mapa_inmigracion, ncol=2)
mapa_cluster<- ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=cluster),color="BLACK", size=0.2 ) + viridis::scale_fill_viridis() + labs(fill="Tasa de emigración:") + theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() , axis.text = element_blank(), axis.ticks = element_blank())
mapa_cluster
mapa_cluster<- ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=cluster),color="BLACK", size=0.2 ) + labs(fill="Tasa de emigración:") + theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() , axis.text = element_blank(), axis.ticks = element_blank())
mapa_cluster
mapa_cluster<- ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=cluster),color="BLACK", size=0.2 ) + labs(fill="Tasa de emigración:") + scale_fill_manual(value=colores)+ theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() , axis.text = element_blank(), axis.ticks = element_blank())
colores
color
mapa_cluster<- ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=cluster),color="BLACK", size=0.2 ) + labs(fill="Tasa de emigración:") + scale_fill_manual(value=color)+ theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() , axis.text = element_blank(), axis.ticks = element_blank())
mapa_cluster<- ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=cluster),color="BLACK", size=0.2 ) + labs(fill="Tasa de emigración:") + scale_fill_manual(values=color)+ theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() , axis.text = element_blank(), axis.ticks = element_blank())
mapa_cluster
mapa_cluster<- ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=cluster),color="BLACK", size=0.2 ) + labs(fill="Cluster:") + scale_fill_manual(values=color)+ theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() , axis.text = element_blank(), axis.ticks = element_blank())
ephinmi<- ephinmi %>% filter(!is.na(provincia_origen))
prov_por_aglo<- read_csv("provincias_por_aglomerado.csv")
cluster_destino<- cluster_nombres_eph %>% select(provincia_origen,cluster_origen) %>% rename(provincia_destino=provincia_origen, cluster_destino=cluster_origen)
cluster_destino<- left_join(prov_por_aglo,cluster_destino)
ephinmi<- left_join(ephinmi,cluster_destino)
cuadro_4<- ephinmi %>% group_by("Provincia"=provincia_destino) %>% summarise("Inmigrantes"=sum(PONDERA))
cuadro_5<- ephinmi %>% group_by("Provincia"=provincia_origen) %>% summarise("Emigrantes"=sum(PONDERA))
cuadro_6<- full_join(cuadro_4,cuadro_5)
######
prov_aglo<- prov_por_aglo %>% rename(provincia=provincia_destino)
ephtotal<- left_join(ephtotal, prov_aglo)
prov_cluster<- clustersprov %>% mutate(Provincia=case_when(Provincia=="Tierra del Fuego, Antártida e Islas del Atlántico Sur (4)"~ "Tierra del Fuego, Antártida e Islas del Atlántico Sur",                              TRUE ~ Provincia))
#######
cuadro_7<- ephtotal %>% group_by("Provincia"=provincia) %>% summarise("Poblacion"=sum(PONDERA))
cuadro_8<- left_join(cuadro_6,cuadro_7)
cuadro_8<- left_join(cuadro_8,prov_cluster)
cuadro_8<- cuadro_8 %>% mutate(tasa_inmigracion=Inmigrantes/Poblacion, tasa_emigracion=Emigrantes/Poblacion, tasa_neta=tasa_inmigracion-tasa_emigracion)
cuadro_8$cluster<- factor(cuadro_8$cluster, levels = c("1","2","3"))
cuadro_8 %>% ggplot(mapping=aes(x=tasa_inmigracion,y = tasa_emigracion, label=Provincia, color=cluster)) + geom_point(show.legend = T) + geom_abline(intercept=-0,slope = 1)+ scale_color_manual(values = color)+ scale_y_continuous(labels = scales::percent_format(),limits = c(0,0.75))+scale_x_continuous(labels = scales::percent_format(),limits = c(0,0.75)) + xlab("Tasa de inmigración") + ylab("Tasa de emigración")+ labs(title = "Tasa de inmigración y emigración por provincia", color="Cluster:")+ ggrepel::geom_text_repel(size=3,family = "LM Roman 10",show.legend = F)+theme(text=element_text(family = "LM Roman 10"),axis.line = element_line(color="BLACK") ,axis.text = element_text(size=7, color = "BLACK") , panel.background = element_blank(),  axis.title = element_text(size=7), title = element_text(face = "bold"), legend.key = element_blank())
cuadro_4<- ephinmi %>% group_by("Provincia"=provincia_destino) %>% summarise("Inmigrantes"=sum(PONDERA))
cuadro_5<- ephinmi %>% group_by("Provincia"=provincia_origen) %>% summarise("Emigrantes"=sum(PONDERA))
cuadro_6<- full_join(cuadro_4,cuadro_5)
######
prov_aglo<- prov_por_aglo %>% rename(provincia=provincia_destino)
ephtotal<- left_join(ephtotal, prov_aglo)
prov_cluster<- clustersprov %>% mutate(Provincia=case_when(Provincia=="Tierra del Fuego, Antártida e Islas del Atlántico Sur (4)"~ "Tierra del Fuego, Antártida e Islas del Atlántico Sur",                              TRUE ~ Provincia))
#######
cuadro_7<- ephtotal %>% group_by("Provincia"=provincia) %>% summarise("Poblacion"=sum(PONDERA))
cuadro_8<- left_join(cuadro_6,cuadro_7)
cuadro_8<- left_join(cuadro_8,prov_cluster)
cuadro_8<- cuadro_8 %>% mutate(tasa_inmigracion=Inmigrantes/Poblacion, tasa_emigracion=Emigrantes/Poblacion, tasa_neta=tasa_inmigracion-tasa_emigracion)
cuadro_8$cluster<- factor(cuadro_8$cluster, levels = c("1","2","3"))
### Mapa de migraciony emigracion por provincia
datos_mapa_prov<- st_read( "./mapa/gadm36_ARG_1.shp")
datos_mapa_prov<- datos_mapa_prov %>% rename(Provincia=NAME_1)
datos_mapa_prov<- datos_mapa_prov %>% mutate(Provincia=case_when(Provincia=="Ciudad de Buenos Aires"  ~ "Ciudad Autónoma de Buenos Aires",
Provincia=="Tierra del Fuego"  ~"Tierra del Fuego, Antártida e Islas del Atlántico Sur",
TRUE~Provincia))
cuadro_9<- cuadro_8 %>% mutate(tasa_inmigracion=formattable::percent(tasa_inmigracion),tasa_emigracion=formattable::percent(tasa_emigracion))
datos_mapa_prov<- inner_join(datos_mapa_prov, cuadro_9)
mapa_cluster<- ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=cluster),color="BLACK", size=0.2 ) + labs(fill="Cluster:") + scale_fill_manual(values=color)+ theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() , axis.text = element_blank(), axis.ticks = element_blank())
mapa_cluster
cuadro_8 %>% ggplot(mapping=aes(x=tasa_inmigracion,y = tasa_emigracion, label=Provincia, color=cluster)) + geom_point(show.legend = T) + geom_abline(intercept=-0,slope = 1)+ scale_color_manual(values = color)+ scale_y_continuous(labels = scales::percent_format(),limits = c(0,0.75))+scale_x_continuous(labels = scales::percent_format(),limits = c(0,0.75)) + xlab("Tasa de inmigración") + ylab("Tasa de emigración")+ labs(title = "Tasa de inmigración y emigración por provincia", color="Cluster:")+ ggrepel::geom_text_repel(size=3,family = "LM Roman 10",show.legend = F)+theme(text=element_text(family = "LM Roman 10"),axis.line = element_line(color="BLACK") ,axis.text = element_text(size=7, color = "BLACK") , panel.background = element_blank(),  axis.title = element_text(size=7), title = element_text(face = "bold"), legend.key = element_blank())
mapa_inmigracion<-ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion),color="BLACK", size=0.2 ) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:") + theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() , axis.text = element_blank(), axis.ticks = element_blank())
mapa_emigracion<- ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_emigracion),color="BLACK", size=0.2 ) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de emigración:") + theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() , axis.text = element_blank(), axis.ticks = element_blank())
mapa_cluster<- ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=cluster),color="BLACK", size=0.2 ) + labs(fill="Cluster:") + scale_fill_manual(values=color)+ theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() , axis.text = element_blank(), axis.ticks = element_blank())
mapa_cluster
gridExtra::grid.arrange(mapa_emigracion,mapa_inmigracion, ncol=2)
rm(list=ls())
resumen2
setwd("/home/alejandrochain/Documentos/GitHub/investigacion2021/macrolocalizacion")
knitr::opts_chunk$set(echo = FALSE, dev="cairo_pdf")
library(readr)
library(tidyverse)
library(factoextra)
library(cluster)
library(fpc)
#estos sirven para formatear pa latex
library(stargazer)
library(xtable)
library(extrafont)
library(eph)
library(readxl)
library(sf)
library(tmap)
library(tmaptools)
color<- c('#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628','#f781bf')
## Individual
ephi<- get_microdata(year=2017:2019, trimester = 1:4, type = "individual")
ephi<- ephi %>%
dplyr::select(microdata) %>%
tidyr::unnest(cols = c(microdata))
### 2016
ephi2<- get_microdata(year=2016, trimester = 2:4, type = "individual")
ephi2<- ephi2 %>%
dplyr::select(microdata) %>%
tidyr::unnest(cols = c(microdata))
ephi<- bind_rows(ephi,ephi2)
ephi<- ephi %>% arrange(-ANO4, -TRIMESTRE)
## Hogar
ephh<- get_microdata(year=2017:2019, trimester = 1:4, type = "hogar")
ephh<- ephh %>%
dplyr::select(microdata) %>%
tidyr::unnest(cols = c(microdata))
### 2016
ephh2<- get_microdata(year=2016, trimester = 2:4, type = "hogar")
ephh2<- ephh2 %>%
dplyr::select(microdata) %>%
tidyr::unnest(cols = c(microdata))
ephh<- bind_rows(ephh,ephh2)
ephh<- ephh %>% arrange(-ANO4, -TRIMESTRE)
### mergeado
ephtotal<- left_join(ephi,ephh)
### aglomerado
aglomerado<- read_excel("aglomerado.xlsx",sheet = 4)
### Sector
sectorcaes<- read.csv("SECTORESCAES.csv", sep=",", header = T, encoding = "UTF-8", colClasses = "character")
### provincia
provincia<- read.csv("provincias.csv", sep=",", header = T)
provincia1<- provincia %>% select(PROVINCIA,CH15_COD)
provincia2<- provincia %>% select(PROVINCIA,CH16_COD)
ephtotal<- ephtotal %>% filter(ESTADO!=0) %>%  mutate(Sexo=as.character(CH04),
Sexo=case_when(Sexo=="1" ~ "Hombres",
Sexo=="2" ~ "Mujeres"),
PP04D_COD = case_when(nchar(PP04D_COD) == 5 ~ PP04D_COD,
nchar(PP04D_COD) == 4 ~ paste0("0", PP04D_COD),
nchar(PP04D_COD) == 3 ~ paste0("00", PP04D_COD),
nchar(PP04D_COD) == 2 ~ paste0("000", PP04D_COD),
nchar(PP04D_COD) == 1 ~ paste0("0000", PP04D_COD)),
CALIFICACION = substr(PP04D_COD, 5, 5),
JERARQUIA = substr(PP04D_COD, 3, 3),
JERARQUIA = case_when(JERARQUIA=="0" ~ "Dirección",
JERARQUIA=="2" ~ "Jefes",
JERARQUIA=="1" ~ "Cuentapropia",
JERARQUIA=="3" ~ "Trabajadores\nAsalariados"),
JERARQUIA = factor(JERARQUIA, c("Dirección", "Jefes", "Trabajadores\nAsalariados", "Cuentapropia")),
PEA= case_when(ESTADO==3 ~ 0,
ESTADO==4 ~ 0,
ESTADO==1 ~ 1,
ESTADO==2 ~ 1),
PP04D_COD = as.character(PP04D_COD),
CALIFICACION = case_when(CALIFICACION=="1" ~ "Profesionales",
CALIFICACION=="2" ~ "Técnicos",
CALIFICACION=="3" ~ "Operativos",
CALIFICACION=="4" ~ "No Calificados"),
CALIFICACION = factor(CALIFICACION, c("No Calificados", "Operativos", "Técnicos", "Profesionales")),
PP04B_COD=as.character(PP04B_COD),
PP04B_COD=case_when(nchar(PP04B_COD)==4~PP04B_COD,
nchar(PP04B_COD)==1~ paste0("0",PP04B_COD,"00"),
nchar(PP04B_COD)==2~ paste0(PP04B_COD,"00"),
nchar(PP04B_COD)==3~ paste0("0",PP04B_COD)),
SECTOR= substr(PP04B_COD,1,2),
HORASSEM=PP3E_TOT+PP3F_TOT,
niveled=case_when(NIVEL_ED==1 | NIVEL_ED==7 ~ "Sin\ninstrucción",
NIVEL_ED %in% c(2,3) ~ "Primario\nCompleto",
NIVEL_ED %in% c(4,5)~ "Secundario\nCompleto",
NIVEL_ED == 6 ~ "Superior/Universitario\ncompleto"),
niveled=factor(niveled, levels = c("Sin\ninstrucción","Primario\nCompleto","Secundario\nCompleto","Superior/Universitario\ncompleto")))
ephtotal<- left_join(ephtotal,aglomerado)
ephtotal<- left_join(ephtotal, sectorcaes)
datos<- read_csv("macroloc_para_r.csv",col_names = T, row.names(1))
datos3<- datos %>% select(-Provincia)
row.names(datos3)<- datos$Provincia
datos4<- datos3
#datos<- datos %>% mutate(`Densidad poblacional: Hab/km² (2010)`=log(`Densidad poblacional: Hab/km² (2010)`))
View(datos4)
