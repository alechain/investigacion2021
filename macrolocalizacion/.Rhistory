TRUE~Provincia))
cuadro_9<- cuadro_8 %>% mutate(tasa_inmigracion=formattable::percent(tasa_inmigracion),tasa_emigracion=formattable::percent(tasa_emigracion))
datos_mapa_prov<- inner_join(datos_mapa_prov, cuadro_9)
#extrafont::font_import(paths = "/home/alejandrochain/Documentos/GitHub/investigacion2021/macrolocalizacion/fuentes")
#extrafont::loadfonts(device = "pdf",quiet = T)
#pdf(file = "mapa_regiones.pdf", width = 4,height = 4)
mapa_cluster<- ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=cluster),color="BLACK", size=0.2 ) + labs(fill="Región:") + scale_fill_manual(values=color)+ theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() , axis.text = element_blank(), axis.ticks = element_blank())
color<- c('#e41a1c','#377eb8','#4daf4a','#a6cee3','#4575b4','#f781bf','#a65628','#ffff33','#984ea3','#ff7f00','#f781bf')
#extrafont::font_import(paths = "/home/alejandrochain/Documentos/GitHub/investigacion2021/macrolocalizacion/fuentes")
#extrafont::loadfonts(device = "pdf",quiet = T)
#pdf(file = "mapa_regiones.pdf", width = 4,height = 4)
mapa_cluster<- ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=cluster),color="BLACK", size=0.2 ) + labs(fill="Región:") + scale_fill_manual(values=color)+ theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() , axis.text = element_blank(), axis.ticks = element_blank())
mapa_cluster
#dev.off()
kableExtra::kable(resumen2, caption = "Resumen de indicadores por regiones", format = 'markdown')
stargazer(resumen2,summary = FALSE)
kableExtra::kable(resumen2, caption = "Resumen de indicadores por regiones", format = 'hmtl')
kableExtra::kable(resumen2, caption = "Resumen de indicadores por regiones")
cuadro_2<-ephinmi %>% group_by("Región"=cluster_origen) %>% summarise("Porcentaje"=formattable::percent((sum(PONDERA)/sum(ephinmi$PONDERA))))
kableExtra::kable(cuadro_2,format = "markdown",caption = "Regiones de origen de los migrantes")
#stargazer(cuadro_2,title = "Regiones de origen de los migrantes",summary = FALSE,label = "cuadro:origen_mig")
cuadro_2<-ephinmi %>% group_by("Región"=cluster_origen) %>% summarise("Porcentaje"=formattable::percent((sum(PONDERA)/sum(ephinmi$PONDERA))))
kableExtra::kable(cuadro_2,format = "html",caption = "Regiones de origen de los migrantes")
cuadro_3<-ephinmi %>% group_by("Región"=cluster_destino) %>% summarise("Porcentaje"=formattable::percent((sum(PONDERA)/sum(ephinmi$PONDERA))))
kableExtra::kable(cuadro_3,format = "html",caption = "Regiones de destino de los migrantes")
#tikz(file = "tasas_emig_inmig_prov.tex", sanitize = TRUE,width = 6,height = 4)
cuadro_8 %>% ggplot(mapping=aes(x=tasa_inmigracion,y = tasa_emigracion, label=Provincia, color=cluster)) + geom_point(show.legend = T) + geom_abline(intercept=-0,slope = 1)+ scale_color_manual(values = color)+ scale_y_continuous(labels = scales::percent_format(),limits = c(0,0.75))+scale_x_continuous(labels = scales::percent_format(),limits = c(0,0.75)) + xlab("Tasa de inmigración") + ylab("Tasa de emigración")+ labs(title = "", color="Región:")+ ggrepel::geom_text_repel(size=2,show.legend = F)+theme(axis.line = element_line(color="BLACK") ,axis.text = element_text(color = "BLACK", size = 5) , axis.title = element_text(size = 5),panel.background = element_blank(), title = element_text(face = "bold"), legend.key = element_blank())
#dev.off()
cuadro_8 %>% ggplot(mapping=aes(x=tasa_inmigracion,y = tasa_emigracion, label=Provincia, color=cluster)) + geom_point(show.legend = T) + geom_abline(intercept=-0,slope = 1)+ scale_color_manual(values = color)+ scale_y_continuous(labels = scales::percent_format(),limits = c(0,0.75))+scale_x_continuous(labels = scales::percent_format(),limits = c(0,0.75)) + xlab("Tasa de inmigración") + ylab("Tasa de emigración")+ labs(title = "", color="Región:")+ ggrepel::geom_text_repel(size=3,family = "LM Roman 10",show.legend = F)+theme(text=element_text(family = "LM Roman 10"),axis.line = element_line(color="BLACK") ,axis.text = element_text(size=7, color = "BLACK") , panel.background = element_blank(),  axis.title = element_text(size=7), title = element_text(face = "bold"), legend.key = element_blank())
cuadro_8 %>% ggplot(mapping=aes(x=tasa_inmigracion,y = tasa_emigracion, label=Provincia, color=cluster)) + geom_point(show.legend = T) + geom_abline(intercept=-0,slope = 1)+ scale_color_manual(values = color)+ scale_y_continuous(labels = scales::percent_format(),limits = c(0,0.75))+scale_x_continuous(labels = scales::percent_format(),limits = c(0,0.75)) + xlab("Tasa de inmigración") + ylab("Tasa de emigración")+ labs(title = "", color="Región:")+ ggrepel::geom_text_repel(size=3,show.legend = F)+theme(text=element_text(),axis.line = element_line(color="BLACK") ,axis.text = element_text(size=7, color = "BLACK") , panel.background = element_blank(),  axis.title = element_text(size=7), title = element_text(face = "bold"), legend.key = element_blank())
#pdf(file = "emig_inmig_por_prov.pdf",height = 4, width = 6)
mapa_inmigracion<-ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion),color="BLACK", size=0.2 ) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:") + theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() , axis.text = element_blank(), axis.ticks = element_blank())
mapa_emigracion<- ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_emigracion),color="BLACK", size=0.2 ) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de emigración:") + theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() , axis.text = element_blank(), axis.ticks = element_blank())
gridExtra::grid.arrange(mapa_emigracion,mapa_inmigracion, ncol=2)
#dev.off()
#pdf(file = "emig_inmig_por_prov.pdf",height = 4, width = 6)
mapa_inmigracion<-ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion),color="BLACK", size=0.2 ) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:") + theme(text=element_text(), panel.background = element_blank() , axis.text = element_blank(), axis.ticks = element_blank())
mapa_emigracion<- ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_emigracion),color="BLACK", size=0.2 ) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de emigración:") + theme(text=element_text(), panel.background = element_blank() , axis.text = element_blank(), axis.ticks = element_blank())
gridExtra::grid.arrange(mapa_emigracion,mapa_inmigracion, ncol=2)
temp<- tempfile()
download.file("https://github.com/alechain/investigacion2021/raw/main/macrolocalizacion/mapa/gadm36_ARG_1.shp", temp)
datos_mapa_prov<- st_read(temp)
temp<- tempfile()
download.file("https://github.com/alechain/investigacion2021/raw/main/macrolocalizacion/mapa/gadm36_ARG_1.shp", temp)
datos_mapa_prov<- st_read(temp)
download.file("https://github.com/alechain/investigacion2021/raw/main/macrolocalizacion/mapa/gadm36_ARG_shp.zip", temp)
unzip(temp)
datos_mapa_prov<- st_read( temp)
temp
datos_mapa_prov<- st_read( unzip(temp,files = "gadm36_ARG_1"))
unzip(temp,files = "gadm36_ARG_1")
g<-unzip(temp,files = "gadm36_ARG_1")
g<-unzip(temp,files = "gadm36_ARG_1.shp")
g
temp<- tempfile()
download.file("https://github.com/alechain/investigacion2021/raw/main/macrolocalizacion/mapa/gadm36_ARG_shp.zip", temp)
g<-unzip(temp,files = c("gadm36_ARG_1.shp","gadm36_ARG_1.cpg","gadm36_ARG_1.dbf","gadm36_ARG_1.prj","gadm36_ARG_1.shx"))
g
datos_mapa_prov<- st_read(g)
datos_mapa_prov<- st_read(g[1])
### Mapa de migraciony emigracion por provincia
temp<- tempfile()
download.file("https://github.com/alechain/investigacion2021/raw/main/macrolocalizacion/mapa/gadm36_ARG_shp.zip", temp)
g<-unzip(temp,files = c("gadm36_ARG_1.shp","gadm36_ARG_1.cpg","gadm36_ARG_1.dbf","gadm36_ARG_1.prj","gadm36_ARG_1.shx"))
datos_mapa_prov<- st_read(g[1])
datos_mapa_prov<- datos_mapa_prov %>% rename(Provincia=NAME_1)
datos_mapa_prov<- datos_mapa_prov %>% mutate(Provincia=case_when(Provincia=="Ciudad de Buenos Aires"  ~ "Ciudad Autónoma de Buenos Aires",
Provincia=="Tierra del Fuego"  ~"Tierra del Fuego, Antártida e Islas del Atlántico Sur",
TRUE~Provincia))
cuadro_9<- cuadro_8 %>% mutate(tasa_inmigracion=formattable::percent(tasa_inmigracion),tasa_emigracion=formattable::percent(tasa_emigracion))
datos_mapa_prov<- inner_join(datos_mapa_prov, cuadro_9)
#extrafont::font_import(paths = "/home/alejandrochain/Documentos/GitHub/investigacion2021/macrolocalizacion/fuentes")
#extrafont::loadfonts(device = "pdf",quiet = T)
#pdf(file = "mapa_regiones.pdf", width = 4,height = 4)
mapa_cluster<- ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=cluster),color="BLACK", size=0.2 ) + labs(fill="Región:") + scale_fill_manual(values=color)+ theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() , axis.text = element_blank(), axis.ticks = element_blank())
mapa_cluster
#dev.off()
mapa_inmigracion<-ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion),color="BLACK", size=0.2 ) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:") + theme(text=element_text(), panel.background = element_blank() , axis.text = element_blank(), axis.ticks = element_blank())
mapa_emigracion<- ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_emigracion),color="BLACK", size=0.2 ) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de emigración:") + theme(text=element_text(), panel.background = element_blank() , axis.text = element_blank(), axis.ticks = element_blank())
gridExtra::grid.arrange(mapa_emigracion,mapa_inmigracion, ncol=2)
#Creación de regresores
unlink(temp)
temp<- tempfile()
download.file("https://github.com/alechain/investigacion2021/blob/main/macrolocalizacion/deflactor.csv")
#Creación de regresores
unlink(temp)
temp<- tempfile()
download.file("https://github.com/alechain/investigacion2021/blob/main/macrolocalizacion/deflactor.csv",temp)
deflactor<- read_csv("deflactor.csv")
unlink(temp)
temp<- tempfile()
download.file("https://github.com/alechain/investigacion2021/blob/main/macrolocalizacion/canasta.csv",temp)
canastas<- read.csv("canasta.csv", sep=";", dec=".", header = TRUE)
unlink(temp)
ephtotal<- left_join(ephtotal, deflactor)
ephtotal<- ephtotal %>% mutate(HIJO=case_when(CH03==3~1,
TRUE ~ 0))
ephtotal<- ephtotal %>% group_by(ANO4, TRIMESTRE, CODUSU,NRO_HOGAR) %>% mutate(HIJO_HOGAR=sum(HIJO)) %>% ungroup()
ephtotal<- left_join(ephtotal,eph::adulto_equivalente)
ephtotal<- left_join(ephtotal,canastas)
ephtotal<- ephtotal %>% group_by(ANO4, TRIMESTRE, CODUSU,NRO_HOGAR) %>% mutate(EAF=sum(adequi)) %>% ungroup()
ephtotal<- ephtotal %>% mutate(CBAEQ=CBA*EAF,
CBTEQ=CBT*EAF)
ephtotal<- ephtotal %>% mutate(condicion=case_when(ITF<CBAEQ ~ "Indigente",
ITF>=CBAEQ & ITF<CBTEQ ~ "Pobre",
ITF>=CBTEQ ~ "No Pobre"))
ephtotal<- ephtotal %>% mutate(hombre=case_when(Sexo=="Hombres"~1,
Sexo=="Mujeres"~0),
edad=case_when(CH06=="-1" ~ as.integer(1),
TRUE ~ as.integer(CH06)),
edad2=(edad)^2,
ledad=log(edad),
medio=case_when(niveled=="Secundario\nCompleto"~ 1,
TRUE ~ 0),
alto=case_when(niveled=="Superior/Universitario\ncompleto"~ 1,
TRUE ~ 0),
IPCFR=IPCF/DEFLACTOR,
IPCFRL=log(IPCFR),
OCUPADO_BAJO=case_when(ESTADO==1 & CALIFICACION %in% c("No Calificados", "Operativos") ~ 1,
TRUE ~ 0),
OCUPADO_ALTO=case_when(ESTADO==1 & CALIFICACION %in% c("Profesionales","Técnicos") ~ 1,
TRUE ~ 0),
PROPIETARIO=case_when(II7==1 | II7==2 ~ 1,
TRUE ~ 0),
HIJO_DUMMY=case_when(HIJO_HOGAR==0 ~ 0,
TRUE ~ 1),
CASADO= case_when(CH07==1 | CH07==2 ~ 1 ,
TRUE ~ 0),
SOLTERO_C_HIJO=case_when(CASADO==0 & HIJO_DUMMY==1~1,
TRUE~0),
CASADO_S_HIJO=case_when(CASADO==1 & HIJO_DUMMY==0~ 1,
TRUE ~ 0),
CASADO_C_HIJO=case_when(CASADO==1 & HIJO_DUMMY==1~1,
TRUE~0),
POBRE=case_when(condicion %in% c("Pobre","Indigente")~1,
TRUE ~ 0),
SUBSIDIO=case_when(V5==1 ~ 1,
TRUE ~ 0)
)
#setwd("/home/alejandrochain/Documentos/GitHub/investigacion2021/macrolocalizacion")
knitr::opts_chunk$set(echo = FALSE, dev="cairo_pdf", fig.cap = TRUE)
library(readr)
library(tidyverse)
library(factoextra)
library(cluster)
library(fpc)
library(stargazer)
library(xtable)
library(extrafont)
library(eph)
library(readxl)
library(sf)
library(tmap)
library(tmaptools)
library(nnet)
color<- c('#e41a1c','#377eb8','#4daf4a','#a6cee3','#4575b4','#f781bf','#a65628','#ffff33','#984ea3','#ff7f00','#f781bf')
## Individual
ephi<- get_microdata(year=2017:2019, trimester = 1:4, type = "individual")
ephi<- ephi %>%
dplyr::select(microdata) %>%
tidyr::unnest(cols = c(microdata))
### 2016
ephi2<- get_microdata(year=2016, trimester = 2:4, type = "individual")
ephi2<- ephi2 %>%
dplyr::select(microdata) %>%
tidyr::unnest(cols = c(microdata))
ephi<- bind_rows(ephi,ephi2)
ephi<- ephi %>% arrange(-ANO4, -TRIMESTRE)
## Hogar
ephh<- get_microdata(year=2017:2019, trimester = 1:4, type = "hogar")
ephh<- ephh %>%
dplyr::select(microdata) %>%
tidyr::unnest(cols = c(microdata))
### 2016
ephh2<- get_microdata(year=2016, trimester = 2:4, type = "hogar")
ephh2<- ephh2 %>%
dplyr::select(microdata) %>%
tidyr::unnest(cols = c(microdata))
ephh<- bind_rows(ephh,ephh2)
ephh<- ephh %>% arrange(-ANO4, -TRIMESTRE)
### mergeado
ephtotal<- left_join(ephi,ephh)
rm(list = c("ephh","ephh2","ephi","ephi2"))
### aglomerado
temp<- tempfile()
download.file("https://github.com/alechain/investigacion2021/raw/main/macrolocalizacion/aglomerado.xlsx", temp)
aglomerado<- read_excel(temp,sheet = 4)
unlink(temp)
### Sector
temp<- tempfile()
download.file("https://github.com/alechain/investigacion2021/raw/main/macrolocalizacion/SECTORESCAES.csv", temp)
sectorcaes<- read.csv(temp, sep=",", header = T, encoding = "UTF-8", colClasses = "character")
unlink(temp)
### provincia
temp<- tempfile()
download.file("https://github.com/alechain/investigacion2021/raw/main/macrolocalizacion/provincias.csv", temp)
provincia<- read.csv(temp, sep=",", header = T)
unlink(temp)
provincia1<- provincia %>% select(PROVINCIA,CH15_COD)
provincia2<- provincia %>% select(PROVINCIA,CH16_COD)
ephtotal<- ephtotal %>% filter(ESTADO!=0) %>%  mutate(Sexo=as.character(CH04),
Sexo=case_when(Sexo=="1" ~ "Hombres",
Sexo=="2" ~ "Mujeres"),
PP04D_COD = case_when(nchar(PP04D_COD) == 5 ~ PP04D_COD,
nchar(PP04D_COD) == 4 ~ paste0("0", PP04D_COD),
nchar(PP04D_COD) == 3 ~ paste0("00", PP04D_COD),
nchar(PP04D_COD) == 2 ~ paste0("000", PP04D_COD),
nchar(PP04D_COD) == 1 ~ paste0("0000", PP04D_COD)),
CALIFICACION = substr(PP04D_COD, 5, 5),
JERARQUIA = substr(PP04D_COD, 3, 3),
JERARQUIA = case_when(JERARQUIA=="0" ~ "Dirección",
JERARQUIA=="2" ~ "Jefes",
JERARQUIA=="1" ~ "Cuentapropia",
JERARQUIA=="3" ~ "Trabajadores\nAsalariados"),
JERARQUIA = factor(JERARQUIA, c("Dirección", "Jefes", "Trabajadores\nAsalariados", "Cuentapropia")),
PEA= case_when(ESTADO==3 ~ 0,
ESTADO==4 ~ 0,
ESTADO==1 ~ 1,
ESTADO==2 ~ 1),
PP04D_COD = as.character(PP04D_COD),
CALIFICACION = case_when(CALIFICACION=="1" ~ "Profesionales",
CALIFICACION=="2" ~ "Técnicos",
CALIFICACION=="3" ~ "Operativos",
CALIFICACION=="4" ~ "No Calificados"),
CALIFICACION = factor(CALIFICACION, c("No Calificados", "Operativos", "Técnicos", "Profesionales")),
PP04B_COD=as.character(PP04B_COD),
PP04B_COD=case_when(nchar(PP04B_COD)==4~PP04B_COD,
nchar(PP04B_COD)==1~ paste0("0",PP04B_COD,"00"),
nchar(PP04B_COD)==2~ paste0(PP04B_COD,"00"),
nchar(PP04B_COD)==3~ paste0("0",PP04B_COD)),
SECTOR= substr(PP04B_COD,1,2),
HORASSEM=PP3E_TOT+PP3F_TOT,
niveled=case_when(NIVEL_ED==1 | NIVEL_ED==7 ~ "Sin\ninstrucción",
NIVEL_ED %in% c(2,3) ~ "Primario\nCompleto",
NIVEL_ED %in% c(4,5)~ "Secundario\nCompleto",
NIVEL_ED == 6 ~ "Superior/Universitario\ncompleto"),
niveled=factor(niveled, levels = c("Sin\ninstrucción","Primario\nCompleto","Secundario\nCompleto","Superior/Universitario\ncompleto")))
ephtotal<- left_join(ephtotal,aglomerado)
ephtotal<- left_join(ephtotal, sectorcaes)
#setwd("/home/alejandrochain/Documentos/GitHub/investigacion2021/macrolocalizacion")
knitr::opts_chunk$set(echo = FALSE, dev="cairo_pdf", fig.cap = TRUE)
library(readr)
library(tidyverse)
library(factoextra)
library(cluster)
library(fpc)
library(stargazer)
library(xtable)
library(extrafont)
library(eph)
library(readxl)
library(sf)
library(tmap)
library(tmaptools)
library(nnet)
color<- c('#e41a1c','#377eb8','#4daf4a','#a6cee3','#4575b4','#f781bf','#a65628','#ffff33','#984ea3','#ff7f00','#f781bf')
## Individual
ephi<- get_microdata(year=2017:2019, trimester = 1:4, type = "individual")
ephi<- ephi %>%
dplyr::select(microdata) %>%
tidyr::unnest(cols = c(microdata))
### 2016
ephi2<- get_microdata(year=2016, trimester = 2:4, type = "individual")
ephi2<- ephi2 %>%
dplyr::select(microdata) %>%
tidyr::unnest(cols = c(microdata))
ephi<- bind_rows(ephi,ephi2)
ephi<- ephi %>% arrange(-ANO4, -TRIMESTRE)
## Hogar
ephh<- get_microdata(year=2017:2019, trimester = 1:4, type = "hogar")
ephh<- ephh %>%
dplyr::select(microdata) %>%
tidyr::unnest(cols = c(microdata))
### 2016
ephh2<- get_microdata(year=2016, trimester = 2:4, type = "hogar")
ephh2<- ephh2 %>%
dplyr::select(microdata) %>%
tidyr::unnest(cols = c(microdata))
ephh<- bind_rows(ephh,ephh2)
ephh<- ephh %>% arrange(-ANO4, -TRIMESTRE)
### mergeado
ephtotal<- left_join(ephi,ephh)
rm(list = c("ephh","ephh2","ephi","ephi2"))
### aglomerado
temp<- tempfile()
download.file("https://github.com/alechain/investigacion2021/raw/main/macrolocalizacion/aglomerado.xlsx", temp)
aglomerado<- read_excel(temp,sheet = 4)
unlink(temp)
### Sector
temp<- tempfile()
download.file("https://github.com/alechain/investigacion2021/raw/main/macrolocalizacion/SECTORESCAES.csv", temp)
sectorcaes<- read.csv(temp, sep=",", header = T, encoding = "UTF-8", colClasses = "character")
unlink(temp)
### provincia
temp<- tempfile()
download.file("https://github.com/alechain/investigacion2021/raw/main/macrolocalizacion/provincias.csv", temp)
provincia<- read.csv(temp, sep=",", header = T)
unlink(temp)
provincia1<- provincia %>% select(PROVINCIA,CH15_COD)
provincia2<- provincia %>% select(PROVINCIA,CH16_COD)
ephtotal<- ephtotal %>% filter(ESTADO!=0) %>%  mutate(Sexo=as.character(CH04),
Sexo=case_when(Sexo=="1" ~ "Hombres",
Sexo=="2" ~ "Mujeres"),
PP04D_COD = case_when(nchar(PP04D_COD) == 5 ~ PP04D_COD,
nchar(PP04D_COD) == 4 ~ paste0("0", PP04D_COD),
nchar(PP04D_COD) == 3 ~ paste0("00", PP04D_COD),
nchar(PP04D_COD) == 2 ~ paste0("000", PP04D_COD),
nchar(PP04D_COD) == 1 ~ paste0("0000", PP04D_COD)),
CALIFICACION = substr(PP04D_COD, 5, 5),
JERARQUIA = substr(PP04D_COD, 3, 3),
JERARQUIA = case_when(JERARQUIA=="0" ~ "Dirección",
JERARQUIA=="2" ~ "Jefes",
JERARQUIA=="1" ~ "Cuentapropia",
JERARQUIA=="3" ~ "Trabajadores\nAsalariados"),
JERARQUIA = factor(JERARQUIA, c("Dirección", "Jefes", "Trabajadores\nAsalariados", "Cuentapropia")),
PEA= case_when(ESTADO==3 ~ 0,
ESTADO==4 ~ 0,
ESTADO==1 ~ 1,
ESTADO==2 ~ 1),
PP04D_COD = as.character(PP04D_COD),
CALIFICACION = case_when(CALIFICACION=="1" ~ "Profesionales",
CALIFICACION=="2" ~ "Técnicos",
CALIFICACION=="3" ~ "Operativos",
CALIFICACION=="4" ~ "No Calificados"),
CALIFICACION = factor(CALIFICACION, c("No Calificados", "Operativos", "Técnicos", "Profesionales")),
PP04B_COD=as.character(PP04B_COD),
PP04B_COD=case_when(nchar(PP04B_COD)==4~PP04B_COD,
nchar(PP04B_COD)==1~ paste0("0",PP04B_COD,"00"),
nchar(PP04B_COD)==2~ paste0(PP04B_COD,"00"),
nchar(PP04B_COD)==3~ paste0("0",PP04B_COD)),
SECTOR= substr(PP04B_COD,1,2),
HORASSEM=PP3E_TOT+PP3F_TOT,
niveled=case_when(NIVEL_ED==1 | NIVEL_ED==7 ~ "Sin\ninstrucción",
NIVEL_ED %in% c(2,3) ~ "Primario\nCompleto",
NIVEL_ED %in% c(4,5)~ "Secundario\nCompleto",
NIVEL_ED == 6 ~ "Superior/Universitario\ncompleto"),
niveled=factor(niveled, levels = c("Sin\ninstrucción","Primario\nCompleto","Secundario\nCompleto","Superior/Universitario\ncompleto")))
ephtotal<- left_join(ephtotal,aglomerado)
ephtotal<- left_join(ephtotal, sectorcaes)
## Carga de datos
##Para comenzar, cargamos los datos de las variables sociales y economicas que definen a las distintas provincias de la Argentina.
temp<- tempfile()
download.file("https://github.com/alechain/investigacion2021/raw/main/macrolocalizacion/macroloc_para_r.csv", temp)
datos<- read_csv(temp,col_names = T, row.names(1))
unlink(temp)
datos3<- datos %>% select(-Provincia)
row.names(datos3)<- datos$Provincia
datos4<- datos3
#datos<- datos %>% mutate(`Densidad poblacional: Hab/km² (2010)`=log(`Densidad poblacional: Hab/km² (2010)`))
## Normalización de la base de datos
#Ahora normalizamos la base de datos para lograr coherencia en la aplicación de K-means, debido a quen trabajamos con distintas escalas de #datos.
datos3<-datos3 %>% select(-c(`Densidad poblacional: Hab/km² (2010)`))
datos_norm<- scale(datos3)
library(tikzDevice)
#tikz(file = "regiones_optimas.tex", width = 6, height = 4)
factoextra::fviz_nbclust(datos_norm,kmeans, method="wss")+ geom_vline(xintercept = 3, colour="RED", linetype="dotted") + theme_classic() + labs(title="") + xlab("Número de clusters") + ylab("WSS")+ theme(text=element_text(), title = element_text(face = "bold"),axis.text = element_text(color = "BLACK", size = 5) , axis.title = element_text(size = 5),panel.background = element_blank())
#dev.off()
set.seed(1118)
km_clusters<- kmeans(datos_norm,centers = 3,iter.max = 1000,nstart = 2000)
nomenclador<- km_clusters$cluster
#Podemos ver la media de los parámetros para cada uno de los clusters
resumen_cluster<-aggregate(datos3,by = list(cluster=km_clusters$cluster),FUN = median)
resumen_g<-resumen_cluster %>% pivot_longer(-cluster)
resumen2<-data.frame(t(resumen_cluster))
resumen2<- resumen2 %>% rename("Region 1"=X1,"Region 2"=X2, "Region 3"=X3) %>% rownames_to_column()
resumen2<- resumen2 %>% rename("Indicadores"=rowname)
resumen2<- resumen2 %>% filter(Indicadores!="cluster" & Indicadores!="Habitantes (2010)" )
resumen2$`Region 1`<- formattable::comma((resumen2$`Region 1`),2)
resumen2$`Region 2`<- formattable::comma((resumen2$`Region 2`),2)
resumen2$`Region 3`<- formattable::comma((resumen2$`Region 3`),2)
resumen2b<- resumen2[14:16,]
resumen2b$`Region 1`<- resumen2b$`Region 1`*100
resumen2b$`Region 2`<- resumen2b$`Region 2`*100
resumen2b$`Region 3`<- resumen2b$`Region 3`*100
resumen2<- resumen2[1:13,]
resumen2<- bind_rows(resumen2, resumen2b)
#
kableExtra::kable(resumen2,format = "html",caption = "Resumen de indicadores por cluster")
#xtable(resumen2, type="latex",auto = TRUE)
#agregamos a la base de datos original la denominación de cada cluster
datos<- cbind(datos,cluster=nomenclador)
clustersprov<-datos %>% select(Provincia,cluster)
datos %>% group_by(cluster) %>% summarise(habitantes=sum(`Habitantes (2010)`))
datos %>% group_by(cluster) %>% summarise(Provincia)
datos<- datos %>% mutate(Provincia=case_when(Provincia=="Tierra del Fuego, Antártida e Islas del Atlántico Sur (4)"~ "Tierra del Fuego, Antártida e Islas del Atlántico Sur",
TRUE~Provincia)) %>% arrange(Provincia)
names(km_clusters[1])
#tikz(file = "regiones_resultantes.tex", sanitize = TRUE,width = 6,height = 4)
fviz_cluster(km_clusters, data = datos4,
palette = c("RED", "BLUE","GREEN"),
ellipse.type = "euclid",
star.plot = TRUE,
repel = TRUE,
labelsize = 6) + labs(title="") + theme(text=element_text(),  title = element_text(face = "bold"),axis.text = element_text(color = "BLACK", size = 5) , axis.title = element_text(size = 5),panel.background = element_blank(), axis.line.x.bottom = element_line(color = "BLACK"), axis.line.y.left = element_line(color="BLACK"))
#dev.off()
provincia<- provincia %>% arrange(PROVINCIA)
provincia1<- provincia %>% select(PROVINCIA,CH15_COD)
provincia2<- provincia %>% select(PROVINCIA,CH16_COD)
#
nombredato<- datos %>% select(Provincia)
nombredato
name_prov_para_datos<-bind_cols(nombredato, provincia) %>% select(-PROVINCIA)
datos<- left_join(datos,name_prov_para_datos)
#
cluster_nombres_eph<- datos %>% select(c("Provincia","cluster","CH15_COD","CH16_COD"))
cluster_nombres_eph<- cluster_nombres_eph %>% rename(provincia_origen=Provincia, cluster_origen=cluster)
cluster_nombres_eph_ch15<-cluster_nombres_eph %>% select(provincia_origen,CH15_COD, cluster_origen)
##############################################################################################
ephinmi<- ephtotal %>% filter(CH15==3)
ephinmi<- left_join(ephinmi, cluster_nombres_eph_ch15)
ephinmi<- ephinmi %>% filter(!is.na(provincia_origen))
temp<- tempfile()
download.file("https://github.com/alechain/investigacion2021/raw/main/macrolocalizacion/provincias_por_aglomerado.csv", temp)
prov_por_aglo<- read_csv(temp)
unlink(temp)
cluster_destino<- cluster_nombres_eph %>% select(provincia_origen,cluster_origen) %>% rename(provincia_destino=provincia_origen, cluster_destino=cluster_origen)
cluster_destino<- left_join(prov_por_aglo,cluster_destino)
ephinmi<- left_join(ephinmi,cluster_destino)
cuadro_4<- ephinmi %>% group_by("Provincia"=provincia_destino) %>% summarise("Inmigrantes"=sum(PONDERA))
cuadro_5<- ephinmi %>% group_by("Provincia"=provincia_origen) %>% summarise("Emigrantes"=sum(PONDERA))
cuadro_6<- full_join(cuadro_4,cuadro_5)
######
prov_aglo<- prov_por_aglo %>% rename(provincia=provincia_destino)
ephtotal<- left_join(ephtotal, prov_aglo)
prov_cluster<- clustersprov %>% mutate(Provincia=case_when(Provincia=="Tierra del Fuego, Antártida e Islas del Atlántico Sur (4)"~ "Tierra del Fuego, Antártida e Islas del Atlántico Sur",                              TRUE ~ Provincia))
#######
cuadro_7<- ephtotal %>% group_by("Provincia"=provincia) %>% summarise("Poblacion"=sum(PONDERA))
cuadro_8<- left_join(cuadro_6,cuadro_7)
cuadro_8<- left_join(cuadro_8,prov_cluster)
cuadro_8<- cuadro_8 %>% mutate(tasa_inmigracion=Inmigrantes/Poblacion, tasa_emigracion=Emigrantes/Poblacion, tasa_neta=tasa_inmigracion-tasa_emigracion)
cuadro_8$cluster<- factor(cuadro_8$cluster, levels = c("1","2","3"))
### Mapa de migraciony emigracion por provincia
temp<- tempfile()
download.file("https://github.com/alechain/investigacion2021/raw/main/macrolocalizacion/mapa/gadm36_ARG_shp.zip", temp)
g<-unzip(temp,files = c("gadm36_ARG_1.shp","gadm36_ARG_1.cpg","gadm36_ARG_1.dbf","gadm36_ARG_1.prj","gadm36_ARG_1.shx"))
datos_mapa_prov<- st_read(g[1])
datos_mapa_prov<- datos_mapa_prov %>% rename(Provincia=NAME_1)
datos_mapa_prov<- datos_mapa_prov %>% mutate(Provincia=case_when(Provincia=="Ciudad de Buenos Aires"  ~ "Ciudad Autónoma de Buenos Aires",
Provincia=="Tierra del Fuego"  ~"Tierra del Fuego, Antártida e Islas del Atlántico Sur",
TRUE~Provincia))
cuadro_9<- cuadro_8 %>% mutate(tasa_inmigracion=formattable::percent(tasa_inmigracion),tasa_emigracion=formattable::percent(tasa_emigracion))
datos_mapa_prov<- inner_join(datos_mapa_prov, cuadro_9)
#extrafont::font_import(paths = "/home/alejandrochain/Documentos/GitHub/investigacion2021/macrolocalizacion/fuentes")
#extrafont::loadfonts(device = "pdf",quiet = T)
#pdf(file = "mapa_regiones.pdf", width = 4,height = 4)
mapa_cluster<- ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=cluster),color="BLACK", size=0.2 ) + labs(fill="Región:") + scale_fill_manual(values=color)+ theme(text=element_text(family="LM Roman 10"), panel.background = element_blank() , axis.text = element_blank(), axis.ticks = element_blank())
mapa_cluster
#dev.off()
kableExtra::kable(resumen2, caption = "Resumen de indicadores por regiones")
cuadro_2<-ephinmi %>% group_by("Región"=cluster_origen) %>% summarise("Porcentaje"=formattable::percent((sum(PONDERA)/sum(ephinmi$PONDERA))))
kableExtra::kable(cuadro_2,format = "html",caption = "Regiones de origen de los migrantes")
cuadro_3<-ephinmi %>% group_by("Región"=cluster_destino) %>% summarise("Porcentaje"=formattable::percent((sum(PONDERA)/sum(ephinmi$PONDERA))))
kableExtra::kable(cuadro_3,format = "html",caption = "Regiones de destino de los migrantes")
cuadro_8 %>% ggplot(mapping=aes(x=tasa_inmigracion,y = tasa_emigracion, label=Provincia, color=cluster)) + geom_point(show.legend = T) + geom_abline(intercept=-0,slope = 1)+ scale_color_manual(values = color)+ scale_y_continuous(labels = scales::percent_format(),limits = c(0,0.75))+scale_x_continuous(labels = scales::percent_format(),limits = c(0,0.75)) + xlab("Tasa de inmigración") + ylab("Tasa de emigración")+ labs(title = "", color="Región:")+ ggrepel::geom_text_repel(size=3,show.legend = F)+theme(text=element_text(),axis.line = element_line(color="BLACK") ,axis.text = element_text(size=7, color = "BLACK") , panel.background = element_blank(),  axis.title = element_text(size=7), title = element_text(face = "bold"), legend.key = element_blank())
mapa_inmigracion<-ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_inmigracion),color="BLACK", size=0.2 ) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de inmigración:") + theme(text=element_text(), panel.background = element_blank() , axis.text = element_blank(), axis.ticks = element_blank())
mapa_emigracion<- ggplot(data = datos_mapa_prov) + geom_sf(aes(fill=tasa_emigracion),color="BLACK", size=0.2 ) + viridis::scale_fill_viridis(label=scales::percent) + labs(fill="Tasa de emigración:") + theme(text=element_text(), panel.background = element_blank() , axis.text = element_blank(), axis.ticks = element_blank())
gridExtra::grid.arrange(mapa_emigracion,mapa_inmigracion, ncol=2)
#Creación de regresores
unlink(temp)
temp<- tempfile()
download.file("https://github.com/alechain/investigacion2021/blob/main/macrolocalizacion/deflactor.csv",temp)
deflactor<- read_csv("deflactor.csv")
unlink(temp)
temp<- tempfile()
download.file("https://github.com/alechain/investigacion2021/blob/main/macrolocalizacion/canasta.csv",temp)
canastas<- read.csv("canasta.csv", sep=";", dec=".", header = TRUE)
unlink(temp)
ephtotal<- left_join(ephtotal, deflactor)
ephtotal<- ephtotal %>% mutate(HIJO=case_when(CH03==3~1,
TRUE ~ 0))
ephtotal<- ephtotal %>% group_by(ANO4, TRIMESTRE, CODUSU,NRO_HOGAR) %>% mutate(HIJO_HOGAR=sum(HIJO)) %>% ungroup()
ephtotal<- left_join(ephtotal,eph::adulto_equivalente)
ephtotal<- left_join(ephtotal,canastas)
ephtotal<- ephtotal %>% group_by(ANO4, TRIMESTRE, CODUSU,NRO_HOGAR) %>% mutate(EAF=sum(adequi)) %>% ungroup()
ephtotal<- ephtotal %>% mutate(CBAEQ=CBA*EAF,
CBTEQ=CBT*EAF)
ephtotal<- ephtotal %>% mutate(condicion=case_when(ITF<CBAEQ ~ "Indigente",
ITF>=CBAEQ & ITF<CBTEQ ~ "Pobre",
ITF>=CBTEQ ~ "No Pobre"))
ephtotal<- ephtotal %>% mutate(hombre=case_when(Sexo=="Hombres"~1,
Sexo=="Mujeres"~0),
edad=case_when(CH06=="-1" ~ as.integer(1),
TRUE ~ as.integer(CH06)),
edad2=(edad)^2,
ledad=log(edad),
medio=case_when(niveled=="Secundario\nCompleto"~ 1,
TRUE ~ 0),
alto=case_when(niveled=="Superior/Universitario\ncompleto"~ 1,
TRUE ~ 0),
IPCFR=IPCF/DEFLACTOR,
IPCFRL=log(IPCFR),
OCUPADO_BAJO=case_when(ESTADO==1 & CALIFICACION %in% c("No Calificados", "Operativos") ~ 1,
TRUE ~ 0),
OCUPADO_ALTO=case_when(ESTADO==1 & CALIFICACION %in% c("Profesionales","Técnicos") ~ 1,
TRUE ~ 0),
PROPIETARIO=case_when(II7==1 | II7==2 ~ 1,
TRUE ~ 0),
HIJO_DUMMY=case_when(HIJO_HOGAR==0 ~ 0,
TRUE ~ 1),
CASADO= case_when(CH07==1 | CH07==2 ~ 1 ,
TRUE ~ 0),
SOLTERO_C_HIJO=case_when(CASADO==0 & HIJO_DUMMY==1~1,
TRUE~0),
CASADO_S_HIJO=case_when(CASADO==1 & HIJO_DUMMY==0~ 1,
TRUE ~ 0),
CASADO_C_HIJO=case_when(CASADO==1 & HIJO_DUMMY==1~1,
TRUE~0),
POBRE=case_when(condicion %in% c("Pobre","Indigente")~1,
TRUE ~ 0),
SUBSIDIO=case_when(V5==1 ~ 1,
TRUE ~ 0)
)
